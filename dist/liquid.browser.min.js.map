{"version":3,"file":"liquid.browser.min.js","sources":["../src/drop/drop.ts","../src/util/underscore.ts","../src/cache/lru.ts","../src/fs/browser.ts","../src/drop/comparable.ts","../src/render/boolean.ts","../src/render/operator.ts","../src/util/character.ts","../src/util/operator-trie.ts","../src/liquid-options.ts","../src/util/error.ts","../src/parser/token-kind.ts","../src/context/context.ts","../src/util/type-guards.ts","../src/parser/whitespace-ctrl.ts","../src/tokens/token.ts","../src/tokens/number-token.ts","../src/tokens/identifier-token.ts","../src/drop/null-drop.ts","../src/drop/empty-drop.ts","../src/drop/blank-drop.ts","../src/util/literal.ts","../src/tokens/literal-token.ts","../src/tokens/operator-token.ts","../src/parser/parse-string-literal.ts","../src/tokens/property-access-token.ts","../src/util/assert.ts","../src/tokens/filter-token.ts","../src/tokens/hash-token.ts","../src/tokens/quoted-token.ts","../src/tokens/html-token.ts","../src/tokens/delimited-token.ts","../src/tokens/tag-token.ts","../src/tokens/range-token.ts","../src/tokens/output-token.ts","../src/render/expression.ts","../src/parser/tokenizer.ts","../src/parser/match-operator.ts","../src/render/emitter.ts","../src/render/render.ts","../src/parser/parse-stream.ts","../src/template/template-impl.ts","../src/template/tag/hash.ts","../src/template/filter/filter.ts","../src/parser/filter-arg.ts","../src/template/value.ts","../src/util/async.ts","../src/template/tag/tag.ts","../src/template/output.ts","../src/template/html.ts","../src/parser/parser.ts","../src/builtin/tags/assign.ts","../src/util/collection.ts","../src/drop/forloop-drop.ts","../src/builtin/tags/for.ts","../src/builtin/tags/capture.ts","../src/context/block-mode.ts","../src/builtin/tags/case.ts","../src/builtin/tags/comment.ts","../src/builtin/tags/include.ts","../src/builtin/tags/render.ts","../src/builtin/tags/decrement.ts","../src/builtin/tags/cycle.ts","../src/builtin/tags/if.ts","../src/builtin/tags/increment.ts","../src/builtin/tags/layout.ts","../src/drop/block-drop.ts","../src/builtin/tags/block.ts","../src/builtin/tags/raw.ts","../src/drop/tablerowloop-drop.ts","../src/builtin/tags/index.ts","../src/builtin/tags/tablerow.ts","../src/builtin/tags/unless.ts","../src/builtin/tags/break.ts","../src/builtin/tags/continue.ts","../src/builtin/filters/html.ts","../src/builtin/filters/math.ts","../src/util/strftime.ts","../src/builtin/filters/url.ts","../src/builtin/filters/array.ts","../src/builtin/filters/date.ts","../src/builtin/filters/object.ts","../src/builtin/filters/string.ts","../src/template/tag/tag-map.ts","../src/template/filter/filter-map.ts","../src/liquid.ts"],"sourcesContent":["export abstract class Drop {\n  public valueOf (): any {\n    return undefined\n  }\n\n  public liquidMethodMissing (key: string): Promise<string | undefined> | string | undefined {\n    return undefined\n  }\n}\n","import { Drop } from '../drop/drop'\n\nconst toStr = Object.prototype.toString\nconst toLowerCase = String.prototype.toLowerCase\n\n/*\n * Checks if value is classified as a String primitive or object.\n * @param {any} value The value to check.\n * @return {Boolean} Returns true if value is a string, else false.\n */\nexport function isString (value: any): value is string {\n  return toStr.call(value) === '[object String]'\n}\n\nexport function isFunction (value: any): value is Function {\n  return typeof value === 'function'\n}\n\nexport function promisify<T1, T2> (fn: (arg1: T1, cb: (err: Error | null, result: T2) => void) => void): (arg1: T1) => Promise<T2>;\nexport function promisify<T1, T2, T3> (fn: (arg1: T1, arg2: T2, cb: (err: Error | null, result: T3) => void) => void): (arg1: T1, arg2: T2) => Promise<T3>;\nexport function promisify (fn: any) {\n  return function (...args: any[]) {\n    return new Promise((resolve, reject) => {\n      fn(...args, (err: Error, result: any) => {\n        err ? reject(err) : resolve(result)\n      })\n    })\n  }\n}\n\nexport function stringify (value: any): string {\n  value = toValue(value)\n  return isNil(value) ? '' : String(value)\n}\n\nexport function toValue (value: any): any {\n  return value instanceof Drop ? value.valueOf() : value\n}\n\nexport function isNumber (value: any): value is number {\n  return typeof value === 'number'\n}\n\nexport function toLiquid (value: any): any {\n  if (value && isFunction(value.toLiquid)) return toLiquid(value.toLiquid())\n  return value\n}\n\nexport function isNil (value: any): boolean {\n  return value === null || value === undefined\n}\n\nexport function isArray (value: any): value is any[] {\n  // be compatible with IE 8\n  return toStr.call(value) === '[object Array]'\n}\n\n/*\n * Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property.\n * The iteratee is invoked with three arguments: (value, key, object).\n * Iteratee functions may exit iteration early by explicitly returning false.\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @return {Object} Returns object.\n */\nexport function forOwn <T> (\n  object: {[key: string]: T} | undefined,\n  iteratee: ((val: T, key: string, obj: {[key: string]: T}) => boolean | void)\n) {\n  object = object || {}\n  for (const k in object) {\n    if (object.hasOwnProperty(k)) {\n      if (iteratee(object[k], k, object) === false) break\n    }\n  }\n  return object\n}\n\nexport function last <T>(arr: T[]): T;\nexport function last (arr: string): string;\nexport function last (arr: any[] | string): any | string {\n  return arr[arr.length - 1]\n}\n\n/*\n * Checks if value is the language type of Object.\n * (e.g. arrays, functions, objects, regexes, new Number(0), and new String(''))\n * @param {any} value The value to check.\n * @return {Boolean} Returns true if value is an object, else false.\n */\nexport function isObject (value: any): value is object {\n  const type = typeof value\n  return value !== null && (type === 'object' || type === 'function')\n}\n\nexport function range (start: number, stop: number, step = 1) {\n  const arr: number[] = []\n  for (let i = start; i < stop; i += step) {\n    arr.push(i)\n  }\n  return arr\n}\n\nexport function padStart (str: any, length: number, ch = ' ') {\n  return pad(str, length, ch, (str, ch) => ch + str)\n}\n\nexport function padEnd (str: any, length: number, ch = ' ') {\n  return pad(str, length, ch, (str, ch) => str + ch)\n}\n\nexport function pad (str: any, length: number, ch: string, add: (str: string, ch: string) => string) {\n  str = String(str)\n  let n = length - str.length\n  while (n-- > 0) str = add(str, ch)\n  return str\n}\n\nexport function identify<T> (val: T): T {\n  return val\n}\n\nexport function snakeCase (str: string) {\n  return str.replace(\n    /(\\w?)([A-Z])/g,\n    (_, a, b) => (a ? a + '_' : '') + b.toLowerCase()\n  )\n}\n\nexport function changeCase (str: string): string {\n  const hasLowerCase = [...str].some(ch => ch >= 'a' && ch <= 'z')\n  return hasLowerCase ? str.toUpperCase() : str.toLowerCase()\n}\n\nexport function ellipsis (str: string, N: number): string {\n  return str.length > N ? str.substr(0, N - 3) + '...' : str\n}\n\n// compare string in case-insensitive way, undefined values to the tail\nexport function caseInsensitiveCompare (a: any, b: any) {\n  if (a == null && b == null) return 0\n  if (a == null) return 1\n  if (b == null) return -1\n  a = toLowerCase.call(a)\n  b = toLowerCase.call(b)\n  if (a < b) return -1\n  if (a > b) return 1\n  return 0\n}\n","import { Cache } from './cache'\n\nclass Node<T> {\n  constructor (\n    public key: string,\n    public value: T,\n    public next: Node<T>,\n    public prev: Node<T>\n  ) {}\n}\n\nexport class LRU<T> implements Cache<T> {\n  private cache: { [key: string]: Node<T> } = {}\n  private head: Node<T>\n  private tail: Node<T>\n\n  constructor (\n    public limit: number,\n    public size = 0\n  ) {\n    this.head = new Node<T>('HEAD', null as any, null as any, null as any)\n    this.tail = new Node<T>('TAIL', null as any, null as any, null as any)\n    this.head.next = this.tail\n    this.tail.prev = this.head\n  }\n\n  write (key: string, value: T) {\n    if (this.cache[key]) {\n      this.cache[key].value = value\n    } else {\n      const node = new Node(key, value, this.head.next, this.head)\n      this.head.next.prev = node\n      this.head.next = node\n\n      this.cache[key] = node\n      this.size++\n      this.ensureLimit()\n    }\n  }\n\n  read (key: string): T | undefined {\n    if (!this.cache[key]) return\n    const { value } = this.cache[key]\n    this.remove(key)\n    this.write(key, value)\n    return value\n  }\n\n  remove (key: string) {\n    const node = this.cache[key]\n    node.prev.next = node.next\n    node.next.prev = node.prev\n    delete this.cache[key]\n    this.size--\n  }\n\n  clear () {\n    this.head.next = this.tail\n    this.tail.prev = this.head\n    this.size = 0\n    this.cache = {}\n  }\n\n  private ensureLimit () {\n    if (this.size > this.limit) this.remove(this.tail.prev.key)\n  }\n}\n","import { last } from '../util/underscore'\n\nfunction domResolve (root: string, path: string) {\n  const base = document.createElement('base')\n  base.href = root\n\n  const head = document.getElementsByTagName('head')[0]\n  head.insertBefore(base, head.firstChild)\n\n  const a = document.createElement('a')\n  a.href = path\n  const resolved = a.href\n  head.removeChild(base)\n\n  return resolved\n}\n\nexport function resolve (root: string, filepath: string, ext: string) {\n  if (root.length && last(root) !== '/') root += '/'\n  const url = domResolve(root, filepath)\n  return url.replace(/^(\\w+:\\/\\/[^/]+)(\\/[^?]+)/, (str, origin, path) => {\n    const last = path.split('/').pop()\n    if (/\\.\\w+$/.test(last)) return str\n    return origin + path + ext\n  })\n}\n\nexport async function readFile (url: string): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest()\n    xhr.onload = () => {\n      if (xhr.status >= 200 && xhr.status < 300) {\n        resolve(xhr.responseText as string)\n      } else {\n        reject(new Error(xhr.statusText))\n      }\n    }\n    xhr.onerror = () => {\n      reject(new Error('An error occurred whilst receiving the response.'))\n    }\n    xhr.open('GET', url)\n    xhr.send()\n  })\n}\n\nexport function readFileSync (url: string): string {\n  const xhr = new XMLHttpRequest()\n  xhr.open('GET', url, false)\n  xhr.send()\n  if (xhr.status < 200 || xhr.status >= 300) {\n    throw new Error(xhr.statusText)\n  }\n  return xhr.responseText as string\n}\n\nexport async function exists (filepath: string) {\n  return true\n}\n\nexport function existsSync (filepath: string) {\n  return true\n}\n","import { isFunction } from '../util/underscore'\n\nexport interface Comparable {\n  equals: (rhs: any) => boolean;\n  gt: (rhs: any) => boolean;\n  geq: (rhs: any) => boolean;\n  lt: (rhs: any) => boolean;\n  leq: (rhs: any) => boolean;\n}\n\nexport function isComparable (arg: any): arg is Comparable {\n  return arg && isFunction(arg.equals)\n}\n","import { Context } from '../context/context'\n\nexport function isTruthy (val: any, ctx: Context): boolean {\n  return !isFalsy(val, ctx)\n}\n\nexport function isFalsy (val: any, ctx: Context): boolean {\n  if (ctx.opts.jsTruthy) {\n    return !val\n  } else {\n    return val === false || undefined === val || val === null\n  }\n}\n","import { isComparable } from '../drop/comparable'\nimport { Context } from '../context/context'\nimport { isFunction } from '../util/underscore'\nimport { isTruthy } from '../render/boolean'\n\nexport interface Operators {\n  [key: string]: (lhs: any, rhs: any, ctx: Context) => boolean;\n}\n\nexport const defaultOperators: Operators = {\n  '==': (l: any, r: any) => {\n    if (isComparable(l)) return l.equals(r)\n    if (isComparable(r)) return r.equals(l)\n    return l === r\n  },\n  '!=': (l: any, r: any) => {\n    if (isComparable(l)) return !l.equals(r)\n    if (isComparable(r)) return !r.equals(l)\n    return l !== r\n  },\n  '>': (l: any, r: any) => {\n    if (isComparable(l)) return l.gt(r)\n    if (isComparable(r)) return r.lt(l)\n    return l > r\n  },\n  '<': (l: any, r: any) => {\n    if (isComparable(l)) return l.lt(r)\n    if (isComparable(r)) return r.gt(l)\n    return l < r\n  },\n  '>=': (l: any, r: any) => {\n    if (isComparable(l)) return l.geq(r)\n    if (isComparable(r)) return r.leq(l)\n    return l >= r\n  },\n  '<=': (l: any, r: any) => {\n    if (isComparable(l)) return l.leq(r)\n    if (isComparable(r)) return r.geq(l)\n    return l <= r\n  },\n  'contains': (l: any, r: any) => {\n    return l && isFunction(l.indexOf) ? l.indexOf(r) > -1 : false\n  },\n  'and': (l: any, r: any, ctx: Context) => isTruthy(l, ctx) && isTruthy(r, ctx),\n  'or': (l: any, r: any, ctx: Context) => isTruthy(l, ctx) || isTruthy(r, ctx)\n}\n","// **DO NOT CHANGE THIS FILE**\n//\n// This file is generated by bin/character-gen.js\n// bitmask character types to boost performance\nexport const TYPES = [0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 4, 4, 4, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 2, 8, 0, 0, 0, 0, 8, 0, 0, 0, 64, 0, 65, 0, 0, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 0, 0, 2, 2, 2, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0]\nexport const IDENTIFIER = 1\nexport const OPERATOR = 2\nexport const BLANK = 4\nexport const QUOTE = 8\nexport const INLINE_BLANK = 16\nexport const NUMBER = 32\nexport const SIGN = 64\nTYPES[160] = TYPES[5760] = TYPES[6158] = TYPES[8192] = TYPES[8193] = TYPES[8194] = TYPES[8195] = TYPES[8196] = TYPES[8197] = TYPES[8198] = TYPES[8199] = TYPES[8200] = TYPES[8201] = TYPES[8202] = TYPES[8232] = TYPES[8233] = TYPES[8239] = TYPES[8287] = TYPES[12288] = BLANK\n","import { Operators } from '../render/operator'\nimport { IDENTIFIER, TYPES } from '../util/character'\n\nexport interface Trie {\n  [key: string]: any;\n}\n\nexport function createTrie (operators: Operators): Trie {\n  const trie: Trie = {}\n  for (const [name, handler] of Object.entries(operators)) {\n    let node = trie\n\n    for (let i = 0; i < name.length; i++) {\n      const c = name[i]\n      node[c] = node[c] || {}\n\n      if (i === name.length - 1 && (TYPES[name.charCodeAt(i)] & IDENTIFIER)) {\n        node[c].needBoundary = true\n      }\n\n      node = node[c]\n    }\n\n    node.handler = handler\n    node.end = true\n  }\n  return trie\n}\n","import * as _ from './util/underscore'\nimport { Template } from './template/template'\nimport { Cache } from './cache/cache'\nimport { LRU } from './cache/lru'\nimport { FS } from './fs/fs'\nimport * as fs from './fs/node'\nimport { defaultOperators, Operators } from './render/operator'\nimport { createTrie, Trie } from './util/operator-trie'\n\nexport interface LiquidOptions {\n  /** A directory or an array of directories from where to resolve layout and include templates, and the filename passed to `.renderFile()`. If it's an array, the files are looked up in the order they occur in the array. Defaults to `[\".\"]` */\n  root?: string | string[];\n  /** Add a extname (if filepath doesn't include one) before template file lookup. Eg: setting to `\".html\"` will allow including file by basename. Defaults to `\"\"`. */\n  extname?: string;\n  /** Whether or not to cache resolved templates. Defaults to `false`. */\n  cache?: boolean | number | Cache<Template[]>;\n  /** Use Javascript Truthiness. Defaults to `false`. */\n  jsTruthy?: boolean;\n  /** If set, treat the `filepath` parameter in `{%include filepath %}` and `{%layout filepath%}` as a variable, otherwise as a literal value. Defaults to `true`. */\n  dynamicPartials?: boolean;\n  /** Whether or not to assert filter existence. If set to `false`, undefined filters will be skipped. Otherwise, undefined filters will cause an exception. Defaults to `false`. */\n  strictFilters?: boolean;\n  /** Whether or not to assert variable existence.  If set to `false`, undefined variables will be rendered as empty string.  Otherwise, undefined variables will cause an exception. Defaults to `false`. */\n  strictVariables?: boolean;\n  /** Modifies the behavior of `strictVariables`. If set, a single undefined variable will *not* cause an exception in the context of the `if`/`elsif`/`unless` tag and the `default` filter. Instead, it will evaluate to `false` and `null`, respectively. Irrelevant if `strictVariables` is not set. Defaults to `false`. **/\n  lenientIf?: boolean;\n  /** Strip blank characters (including ` `, `\\t`, and `\\r`) from the right of tags (`{% %}`) until `\\n` (inclusive). Defaults to `false`. */\n  trimTagRight?: boolean;\n  /** Similar to `trimTagRight`, whereas the `\\n` is exclusive. Defaults to `false`. See Whitespace Control for details. */\n  trimTagLeft?: boolean;\n  /** Strip blank characters (including ` `, `\\t`, and `\\r`) from the right of values (`{{ }}`) until `\\n` (inclusive). Defaults to `false`. */\n  trimOutputRight?: boolean;\n  /** Similar to `trimOutputRight`, whereas the `\\n` is exclusive. Defaults to `false`. See Whitespace Control for details. */\n  trimOutputLeft?: boolean;\n  /** The left delimiter for liquid tags. **/\n  tagDelimiterLeft?: string;\n  /** The right delimiter for liquid tags. **/\n  tagDelimiterRight?: string;\n  /** The left delimiter for liquid outputs. **/\n  outputDelimiterLeft?: string;\n  /** The right delimiter for liquid outputs. **/\n  outputDelimiterRight?: string;\n  /** Whether input strings to date filter preserve the given timezone **/\n  preserveTimezones?: boolean;\n  /** Whether `trim*Left`/`trim*Right` is greedy. When set to `true`, all consecutive blank characters including `\\n` will be trimed regardless of line breaks. Defaults to `true`. */\n  greedy?: boolean;\n  /** `fs` is used to override the default file-system module with a custom implementation. */\n  fs?: FS;\n  /** the global environment passed down to all partial templates, i.e. templates included by `include`, `layout` and `render` tags. */\n  globals?: object;\n  /** Whether or not to keep value type when writing the Output. Defaults to `false`. */\n  keepOutputType?: boolean;\n  /** An object of operators for conditional statements. Defaults to the regular Liquid operators. */\n  operators?: Operators;\n}\n\ninterface NormalizedOptions extends LiquidOptions {\n  root?: string[];\n  cache?: Cache<Template[]>;\n  operatorsTrie?: Trie;\n}\n\nexport interface NormalizedFullOptions extends NormalizedOptions {\n  root: string[];\n  extname: string;\n  cache: undefined | Cache<Template[]>;\n  jsTruthy: boolean;\n  dynamicPartials: boolean;\n  fs: FS;\n  strictFilters: boolean;\n  strictVariables: boolean;\n  lenientIf: boolean;\n  trimTagRight: boolean;\n  trimTagLeft: boolean;\n  trimOutputRight: boolean;\n  trimOutputLeft: boolean;\n  tagDelimiterLeft: string;\n  tagDelimiterRight: string;\n  outputDelimiterLeft: string;\n  outputDelimiterRight: string;\n  preserveTimezones: boolean;\n  greedy: boolean;\n  globals: object;\n  keepOutputType: boolean;\n  operators: Operators;\n  operatorsTrie: Trie;\n}\n\nexport const defaultOptions: NormalizedFullOptions = {\n  root: ['.'],\n  cache: undefined,\n  extname: '',\n  fs: fs,\n  dynamicPartials: true,\n  jsTruthy: false,\n  trimTagRight: false,\n  trimTagLeft: false,\n  trimOutputRight: false,\n  trimOutputLeft: false,\n  greedy: true,\n  tagDelimiterLeft: '{%',\n  tagDelimiterRight: '%}',\n  outputDelimiterLeft: '{{',\n  outputDelimiterRight: '}}',\n  preserveTimezones: false,\n  strictFilters: false,\n  strictVariables: false,\n  lenientIf: false,\n  globals: {},\n  keepOutputType: false,\n  operators: defaultOperators,\n  operatorsTrie: createTrie(defaultOperators)\n}\n\nexport function normalize (options?: LiquidOptions): NormalizedOptions {\n  options = options || {}\n  if (options.hasOwnProperty('root')) {\n    options.root = normalizeStringArray(options.root)\n  }\n  if (options.hasOwnProperty('cache')) {\n    let cache: Cache<Template[]> | undefined\n    if (typeof options.cache === 'number') cache = options.cache > 0 ? new LRU(options.cache) : undefined\n    else if (typeof options.cache === 'object') cache = options.cache\n    else cache = options.cache ? new LRU<Template[]>(1024) : undefined\n    options.cache = cache\n  }\n  if (options.hasOwnProperty('operators')) {\n    (options as NormalizedOptions).operatorsTrie = createTrie(options.operators!)\n  }\n  return options as NormalizedOptions\n}\n\nexport function applyDefault (options: NormalizedOptions): NormalizedFullOptions {\n  return { ...defaultOptions, ...options }\n}\n\nexport function normalizeStringArray (value: any): string[] {\n  if (_.isArray(value)) return value as string[]\n  if (_.isString(value)) return [value as string]\n  return []\n}\n","import * as _ from './underscore'\nimport { Token } from '../tokens/token'\nimport { Template } from '../template/template'\n\nexport abstract class LiquidError extends Error {\n  private token: Token\n  public context: string\n  private originalError: Error\n  public constructor (err: Error, token: Token) {\n    super(err.message)\n    this.originalError = err\n    this.token = token\n    this.context = ''\n  }\n  protected update () {\n    const err = this.originalError\n    this.context = mkContext(this.token)\n    this.message = mkMessage(err.message, this.token)\n    this.stack = this.message + '\\n' + this.context +\n      '\\n' + this.stack + '\\nFrom ' + err.stack\n  }\n}\n\nexport class TokenizationError extends LiquidError {\n  public constructor (message: string, token: Token) {\n    super(new Error(message), token)\n    this.name = 'TokenizationError'\n    super.update()\n  }\n}\n\nexport class ParseError extends LiquidError {\n  public constructor (err: Error, token: Token) {\n    super(err, token)\n    this.name = 'ParseError'\n    this.message = err.message\n    super.update()\n  }\n}\n\nexport class RenderError extends LiquidError {\n  public constructor (err: Error, tpl: Template) {\n    super(err, tpl.token)\n    this.name = 'RenderError'\n    this.message = err.message\n    super.update()\n  }\n  public static is (obj: any): obj is RenderError {\n    return obj.name === 'RenderError'\n  }\n}\n\nexport class UndefinedVariableError extends LiquidError {\n  public constructor (err: Error, token: Token) {\n    super(err, token)\n    this.name = 'UndefinedVariableError'\n    this.message = err.message\n    super.update()\n  }\n}\n\n// only used internally; raised where we don't have token information,\n// so it can't be an UndefinedVariableError.\nexport class InternalUndefinedVariableError extends Error {\n  variableName: string\n\n  public constructor (variableName: string) {\n    super(`undefined variable: ${variableName}`)\n    this.name = 'InternalUndefinedVariableError'\n    this.variableName = variableName\n  }\n}\n\nexport class AssertionError extends Error {\n  public constructor (message: string) {\n    super(message)\n    this.name = 'AssertionError'\n    this.message = message + ''\n  }\n}\n\nfunction mkContext (token: Token) {\n  const [line] = token.getPosition()\n  const lines = token.input.split('\\n')\n  const begin = Math.max(line - 2, 1)\n  const end = Math.min(line + 3, lines.length)\n\n  const context = _\n    .range(begin, end + 1)\n    .map(lineNumber => {\n      const indicator = (lineNumber === line) ? '>> ' : '   '\n      const num = _.padStart(String(lineNumber), String(end).length)\n      const text = lines[lineNumber - 1]\n      return `${indicator}${num}| ${text}`\n    })\n    .join('\\n')\n\n  return context\n}\n\nfunction mkMessage (msg: string, token: Token) {\n  if (token.file) msg += `, file:${token.file}`\n  const [line, col] = token.getPosition()\n  msg += `, line:${line}, col:${col}`\n  return msg\n}\n","export enum TokenKind {\n  Number = 1,\n  Literal = 2,\n  Tag = 4,\n  Output = 8,\n  HTML = 16,\n  Filter = 32,\n  Hash = 64,\n  PropertyAccess = 128,\n  Word = 256,\n  Range = 512,\n  Quoted = 1024,\n  Operator = 2048,\n  Delimited = Tag | Output\n}\n","import { Drop } from '../drop/drop'\nimport { __assign } from 'tslib'\nimport { NormalizedFullOptions, defaultOptions } from '../liquid-options'\nimport { Scope } from './scope'\nimport { isArray, isNil, isString, isFunction, toLiquid } from '../util/underscore'\nimport { InternalUndefinedVariableError } from '../util/error'\n\nexport class Context {\n  private scopes: Scope[] = [{}]\n  private registers = {}\n  public environments: Scope\n  public globals: Scope\n  public sync: boolean\n  public opts: NormalizedFullOptions\n  public constructor (env: object = {}, opts: NormalizedFullOptions = defaultOptions, sync = false) {\n    this.sync = sync\n    this.opts = opts\n    this.globals = opts.globals\n    this.environments = env\n  }\n  public getRegister (key: string, defaultValue = {}) {\n    return (this.registers[key] = this.registers[key] || defaultValue)\n  }\n  public setRegister (key: string, value: any) {\n    return (this.registers[key] = value)\n  }\n  public saveRegister (...keys: string[]): [string, any][] {\n    return keys.map(key => [key, this.getRegister(key)])\n  }\n  public restoreRegister (keyValues: [string, any][]) {\n    return keyValues.forEach(([key, value]) => this.setRegister(key, value))\n  }\n  public getAll () {\n    return [this.globals, this.environments, ...this.scopes]\n      .reduce((ctx, val) => __assign(ctx, val), {})\n  }\n  public get (paths: string[]) {\n    const scope = this.findScope(paths[0])\n    return this.getFromScope(scope, paths)\n  }\n  public getFromScope (scope: object, paths: string[] | string) {\n    if (typeof paths === 'string') paths = paths.split('.')\n    return paths.reduce((scope, path) => {\n      const preScope = readProperty(scope, path)\n      if (this.isHexColor(scope) && !preScope) {\n        const rgbValue = this.hexToRgba(scope)\n        scope = readProperty(rgbValue, path)\n      } else {\n        scope = preScope\n      }\n      if (isNil(scope) && this.opts.strictVariables) {\n        throw new InternalUndefinedVariableError(path)\n      }\n      return scope\n    }, scope)\n  }\n  public push (ctx: object) {\n    return this.scopes.push(ctx)\n  }\n  public pop () {\n    return this.scopes.pop()\n  }\n  public bottom () {\n    return this.scopes[0]\n  }\n  private findScope (key: string) {\n    for (let i = this.scopes.length - 1; i >= 0; i--) {\n      const candidate = this.scopes[i]\n      if (key in candidate) return candidate\n    }\n    if (key in this.environments) return this.environments\n    return this.globals\n  }\n  private isHexColor (hexStr: any) {\n    // 十六进制颜色值的正则表达式\n    const reg = /^#([0-9a-fA-f]{6}|[0-9a-fA-f]{3})$/\n    return hexStr && reg.test(hexStr)\n  }\n  private hexToRgba (hexStr: any) {\n    let rgba = {\n      red: '',\n      green: '',\n      blue: '',\n      alpha: ''\n    }\n    // 如果是16进制颜色\n    if (this.isHexColor(hexStr)) {\n      if (hexStr.length === 4) {\n        let colorNew = '#'\n        for (let i = 1; i < 4; i += 1) {\n          colorNew += hexStr.slice(i, i + 1).concat(hexStr.slice(i, i + 1))\n        }\n        hexStr = colorNew\n      }\n      // 处理六位的颜色值\n      const colorChange = []\n      for (let i = 1; i < 7; i += 2) {\n        colorChange.push(parseInt('0x' + hexStr.slice(i, i + 2)))\n      }\n      rgba = {\n        red: `${colorChange[0]}`,\n        green: `${colorChange[1]}`,\n        blue: `${colorChange[2]}`,\n        alpha: `${1}`\n      }\n    }\n    return rgba\n  }\n}\n\nexport function readProperty (obj: Scope, key: string) {\n  if (isNil(obj)) return obj\n  obj = toLiquid(obj)\n  if (isFunction(obj[key])) return obj[key]()\n  if (obj instanceof Drop) {\n    if (obj.hasOwnProperty(key)) return obj[key]\n    return obj.liquidMethodMissing(key)\n  }\n  if (key === 'size') return readSize(obj)\n  if (key === 'first') return readFirst(obj)\n  if (key === 'last') return readLast(obj)\n  return obj[key]\n}\n\nfunction readFirst (obj: Scope) {\n  if (isArray(obj)) return obj[0]\n  return obj['first']\n}\n\nfunction readLast (obj: Scope) {\n  if (isArray(obj)) return obj[obj.length - 1]\n  return obj['last']\n}\n\nfunction readSize (obj: Scope) {\n  if (isArray(obj) || isString(obj)) return obj.length\n  return obj['size']\n}\n","import { OperatorToken } from '../tokens/operator-token'\nimport { DelimitedToken } from '../tokens/delimited-token'\nimport { IdentifierToken } from '../tokens/identifier-token'\nimport { TagToken } from '../tokens/tag-token'\nimport { HTMLToken } from '../tokens/html-token'\nimport { OutputToken } from '../tokens/output-token'\nimport { PropertyAccessToken } from '../tokens/property-access-token'\nimport { LiteralToken } from '../tokens/literal-token'\nimport { QuotedToken } from '../tokens/quoted-token'\nimport { NumberToken } from '../tokens/number-token'\nimport { RangeToken } from '../tokens/range-token'\nimport { TokenKind } from '../parser/token-kind'\n\nexport function isDelimitedToken (val: any): val is DelimitedToken {\n  return !!(getKind(val) & TokenKind.Delimited)\n}\n\nexport function isOperatorToken (val: any): val is OperatorToken {\n  return getKind(val) === TokenKind.Operator\n}\n\nexport function isHTMLToken (val: any): val is HTMLToken {\n  return getKind(val) === TokenKind.HTML\n}\n\nexport function isOutputToken (val: any): val is OutputToken {\n  return getKind(val) === TokenKind.Output\n}\n\nexport function isTagToken (val: any): val is TagToken {\n  return getKind(val) === TokenKind.Tag\n}\n\nexport function isQuotedToken (val: any): val is QuotedToken {\n  return getKind(val) === TokenKind.Quoted\n}\n\nexport function isLiteralToken (val: any): val is LiteralToken {\n  return getKind(val) === TokenKind.Literal\n}\n\nexport function isNumberToken (val: any): val is NumberToken {\n  return getKind(val) === TokenKind.Number\n}\n\nexport function isPropertyAccessToken (val: any): val is PropertyAccessToken {\n  return getKind(val) === TokenKind.PropertyAccess\n}\n\nexport function isWordToken (val: any): val is IdentifierToken {\n  return getKind(val) === TokenKind.Word\n}\n\nexport function isRangeToken (val: any): val is RangeToken {\n  return getKind(val) === TokenKind.Range\n}\n\nfunction getKind (val: any) {\n  return val ? val.kind : -1\n}\n","import { Token } from '../tokens/token'\nimport { isTagToken, isHTMLToken, isDelimitedToken } from '../util/type-guards'\nimport { NormalizedFullOptions } from '../liquid-options'\nimport { TYPES, INLINE_BLANK, BLANK } from '../util/character'\n\nexport function whiteSpaceCtrl (tokens: Token[], options: NormalizedFullOptions) {\n  let inRaw = false\n\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i]\n    if (!isDelimitedToken(token)) continue\n    if (!inRaw && token.trimLeft) {\n      trimLeft(tokens[i - 1], options.greedy)\n    }\n\n    if (isTagToken(token)) {\n      if (token.name === 'raw') inRaw = true\n      else if (token.name === 'endraw') inRaw = false\n    }\n\n    if (!inRaw && token.trimRight) {\n      trimRight(tokens[i + 1], options.greedy)\n    }\n  }\n}\n\nfunction trimLeft (token: Token, greedy: boolean) {\n  if (!token || !isHTMLToken(token)) return\n\n  const mask = greedy ? BLANK : INLINE_BLANK\n  while (TYPES[token.input.charCodeAt(token.end - 1 - token.trimRight)] & mask) token.trimRight++\n}\n\nfunction trimRight (token: Token, greedy: boolean) {\n  if (!token || !isHTMLToken(token)) return\n\n  const mask = greedy ? BLANK : INLINE_BLANK\n  while (TYPES[token.input.charCodeAt(token.begin + token.trimLeft)] & mask) token.trimLeft++\n  if (token.input.charAt(token.begin + token.trimLeft) === '\\n') token.trimLeft++\n}\n","import { TokenKind } from '../parser/token-kind'\n\nexport abstract class Token {\n  public constructor (\n    public kind: TokenKind,\n    public input: string,\n    public begin: number,\n    public end: number,\n    public file?: string\n  ) {}\n  public getText () {\n    return this.input.slice(this.begin, this.end)\n  }\n  public getPosition () {\n    let [row, col] = [1, 1]\n    for (let i = 0; i < this.begin; i++) {\n      if (this.input[i] === '\\n') {\n        row++\n        col = 1\n      } else col++\n    }\n    return [row, col]\n  }\n  public size () {\n    return this.end - this.begin\n  }\n}\n","import { Token } from './token'\nimport { IdentifierToken } from './identifier-token'\nimport { TokenKind } from '../parser/token-kind'\n\nexport class NumberToken extends Token {\n  constructor (\n    public whole: IdentifierToken,\n    public decimal?: IdentifierToken\n  ) {\n    super(TokenKind.Number, whole.input, whole.begin, decimal ? decimal.end : whole.end, whole.file)\n  }\n}\n","import { Token } from './token'\nimport { NUMBER, TYPES, SIGN } from '../util/character'\nimport { TokenKind } from '../parser/token-kind'\n\nexport class IdentifierToken extends Token {\n  public content: string\n  constructor (\n    public input: string,\n    public begin: number,\n    public end: number,\n    public file?: string\n  ) {\n    super(TokenKind.Word, input, begin, end, file)\n    this.content = this.getText()\n  }\n  isNumber (allowSign = false) {\n    const begin = allowSign && TYPES[this.input.charCodeAt(this.begin)] & SIGN\n      ? this.begin + 1\n      : this.begin\n    for (let i = begin; i < this.end; i++) {\n      if (!(TYPES[this.input.charCodeAt(i)] & NUMBER)) return false\n    }\n    return true\n  }\n}\n","import { Drop } from './drop'\nimport { Comparable } from './comparable'\nimport { isNil, toValue } from '../util/underscore'\n\nexport class NullDrop extends Drop implements Comparable {\n  public equals (value: any) {\n    return isNil(toValue(value))\n  }\n  public gt () {\n    return false\n  }\n  public geq () {\n    return false\n  }\n  public lt () {\n    return false\n  }\n  public leq () {\n    return false\n  }\n  public valueOf () {\n    return null\n  }\n}\n","import { Drop } from './drop'\nimport { Comparable } from './comparable'\nimport { isObject, isString, isArray, toValue } from '../util/underscore'\n\nexport class EmptyDrop extends Drop implements Comparable {\n  public equals (value: any) {\n    if (value instanceof EmptyDrop) return false\n    value = toValue(value)\n    if (isString(value) || isArray(value)) return value.length === 0\n    if (isObject(value)) return Object.keys(value).length === 0\n    return false\n  }\n  public gt () {\n    return false\n  }\n  public geq () {\n    return false\n  }\n  public lt () {\n    return false\n  }\n  public leq () {\n    return false\n  }\n  public valueOf () {\n    return ''\n  }\n}\n","import { isNil, isString, toValue } from '../util/underscore'\nimport { EmptyDrop } from '../drop/empty-drop'\n\nexport class BlankDrop extends EmptyDrop {\n  public equals (value: any) {\n    if (value === false) return true\n    if (isNil(toValue(value))) return true\n    if (isString(value)) return /^\\s*$/.test(value)\n    return super.equals(value)\n  }\n}\n","import { NullDrop } from '../drop/null-drop'\nimport { EmptyDrop } from '../drop/empty-drop'\nimport { BlankDrop } from '../drop/blank-drop'\n\nconst nil = new NullDrop()\nexport const literalValues = {\n  'true': true,\n  'false': false,\n  'nil': nil,\n  'null': nil,\n  'empty': new EmptyDrop(),\n  'blank': new BlankDrop()\n}\n","import { Token } from './token'\nimport { TokenKind } from '../parser/token-kind'\n\nexport class LiteralToken extends Token {\n  public literal: string\n  public constructor (\n    public input: string,\n    public begin: number,\n    public end: number,\n    public file?: string\n  ) {\n    super(TokenKind.Literal, input, begin, end, file)\n    this.literal = this.getText()\n  }\n}\n","import { Token } from './token'\nimport { TokenKind } from '../parser/token-kind'\n\nexport const precedence = {\n  '==': 1,\n  '!=': 1,\n  '>': 1,\n  '<': 1,\n  '>=': 1,\n  '<=': 1,\n  'contains': 1,\n  'and': 0,\n  'or': 0\n}\n\nexport class OperatorToken extends Token {\n  public operator: string\n  public constructor (\n    public input: string,\n    public begin: number,\n    public end: number,\n    public file?: string\n  ) {\n    super(TokenKind.Operator, input, begin, end, file)\n    this.operator = this.getText()\n  }\n  getPrecedence () {\n    const key = this.getText()\n    return key in precedence ? precedence[key] : 1\n  }\n}\n","const rHex = /[\\da-fA-F]/\nconst rOct = /[0-7]/\nconst escapeChar = {\n  b: '\\b',\n  f: '\\f',\n  n: '\\n',\n  r: '\\r',\n  t: '\\t',\n  v: '\\x0B'\n}\n\nfunction hexVal (c: string) {\n  const code = c.charCodeAt(0)\n  if (code >= 97) return code - 87\n  if (code >= 65) return code - 55\n  return code - 48\n}\n\nexport function parseStringLiteral (str: string): string {\n  let ret = ''\n  for (let i = 1; i < str.length - 1; i++) {\n    if (str[i] !== '\\\\') {\n      ret += str[i]\n      continue\n    }\n    if (escapeChar[str[i + 1]] !== undefined) {\n      ret += escapeChar[str[++i]]\n    } else if (str[i + 1] === 'u') {\n      let val = 0\n      let j = i + 2\n      while (j <= i + 5 && rHex.test(str[j])) {\n        val = val * 16 + hexVal(str[j++])\n      }\n      i = j - 1\n      ret += String.fromCharCode(val)\n    } else if (!rOct.test(str[i + 1])) {\n      ret += str[++i]\n    } else {\n      let j = i + 1\n      let val = 0\n      while (j <= i + 3 && rOct.test(str[j])) {\n        val = val * 8 + hexVal(str[j++])\n      }\n      i = j - 1\n      ret += String.fromCharCode(val)\n    }\n  }\n  return ret\n}\n","import { Token } from './token'\nimport { IdentifierToken } from './identifier-token'\nimport { QuotedToken } from './quoted-token'\nimport { TokenKind } from '../parser/token-kind'\nimport { parseStringLiteral } from '../parser/parse-string-literal'\n\nexport class PropertyAccessToken extends Token {\n  constructor (\n    public variable: IdentifierToken | QuotedToken,\n    public props: (IdentifierToken | QuotedToken | PropertyAccessToken)[],\n    end: number\n  ) {\n    super(TokenKind.PropertyAccess, variable.input, variable.begin, end, variable.file)\n  }\n\n  getVariableAsText () {\n    if (this.variable instanceof IdentifierToken) {\n      return this.variable.getText()\n    } else {\n      return parseStringLiteral(this.variable.getText())\n    }\n  }\n}\n","import { AssertionError } from './error'\n\nexport function assert <T> (predicate: T | null | undefined, message?: () => string) {\n  if (!predicate) {\n    const msg = message ? message() : `expect ${predicate} to be true`\n    throw new AssertionError(msg)\n  }\n}\n","import { Token } from './token'\nimport { FilterArg } from '../parser/filter-arg'\nimport { TokenKind } from '../parser/token-kind'\n\nexport class FilterToken extends Token {\n  public constructor (\n    public name: string,\n    public args: FilterArg[],\n    input: string,\n    begin: number,\n    end: number,\n    file?: string\n  ) {\n    super(TokenKind.Filter, input, begin, end, file)\n  }\n}\n","import { Token } from './token'\nimport { ValueToken } from './value-token'\nimport { IdentifierToken } from './identifier-token'\nimport { TokenKind } from '../parser/token-kind'\n\nexport class HashToken extends Token {\n  constructor (\n    public input: string,\n    public begin: number,\n    public end: number,\n    public name: IdentifierToken,\n    public value?: ValueToken,\n    public file?: string\n  ) {\n    super(TokenKind.Hash, input, begin, end, file)\n  }\n}\n","import { Token } from './token'\nimport { TokenKind } from '../parser/token-kind'\n\nexport class QuotedToken extends Token {\n  constructor (\n    public input: string,\n    public begin: number,\n    public end: number,\n    public file?: string\n  ) {\n    super(TokenKind.Quoted, input, begin, end, file)\n  }\n}\n","import { Token } from './token'\nimport { TokenKind } from '../parser/token-kind'\n\nexport class HTMLToken extends Token {\n  trimLeft = 0\n  trimRight = 0\n  constructor (\n    public input: string,\n    public begin: number,\n    public end: number,\n    public file?: string\n  ) {\n    super(TokenKind.HTML, input, begin, end, file)\n  }\n  public getContent () {\n    return this.input.slice(this.begin + this.trimLeft, this.end - this.trimRight)\n  }\n}\n","import { Token } from './token'\nimport { TokenKind } from '../parser/token-kind'\nimport { last } from '../util/underscore'\n\nexport abstract class DelimitedToken extends Token {\n  public trimLeft = false\n  public trimRight = false\n  public content: string\n  public constructor (\n    kind: TokenKind,\n    content: string,\n    input: string,\n    begin: number,\n    end: number,\n    trimLeft: boolean,\n    trimRight: boolean,\n    file?: string\n  ) {\n    super(kind, input, begin, end, file)\n    this.content = this.getText()\n    const tl = content[0] === '-'\n    const tr = last(content) === '-'\n    this.content = content\n      .slice(\n        tl ? 1 : 0,\n        tr ? -1 : content.length\n      )\n      .trim()\n    this.trimLeft = tl || trimLeft\n    this.trimRight = tr || trimRight\n  }\n}\n","import { DelimitedToken } from './delimited-token'\nimport { TokenizationError } from '../util/error'\nimport { NormalizedFullOptions } from '../liquid-options'\nimport { TokenKind } from '../parser/token-kind'\nimport { Tokenizer } from '../parser/tokenizer'\n\nexport class TagToken extends DelimitedToken {\n  public name: string\n  public args: string\n  public constructor (\n    input: string,\n    begin: number,\n    end: number,\n    options: NormalizedFullOptions,\n    file?: string\n  ) {\n    const { trimTagLeft, trimTagRight, tagDelimiterLeft, tagDelimiterRight } = options\n    const value = input.slice(begin + tagDelimiterLeft.length, end - tagDelimiterRight.length)\n    super(TokenKind.Tag, value, input, begin, end, trimTagLeft, trimTagRight, file)\n\n    const tokenizer = new Tokenizer(this.content, options.operatorsTrie)\n    this.name = tokenizer.readIdentifier().getText()\n    if (!this.name) throw new TokenizationError(`illegal tag syntax`, this)\n\n    tokenizer.skipBlank()\n    this.args = tokenizer.remaining()\n  }\n}\n","import { Token } from './token'\nimport { ValueToken } from './value-token'\nimport { TokenKind } from '../parser/token-kind'\n\nexport class RangeToken extends Token {\n  constructor (\n    public input: string,\n    public begin: number,\n    public end: number,\n    public lhs: ValueToken,\n    public rhs: ValueToken,\n    public file?: string\n  ) {\n    super(TokenKind.Range, input, begin, end, file)\n  }\n}\n","import { DelimitedToken } from './delimited-token'\nimport { NormalizedFullOptions } from '../liquid-options'\nimport { TokenKind } from '../parser/token-kind'\n\nexport class OutputToken extends DelimitedToken {\n  public constructor (\n    input: string,\n    begin: number,\n    end: number,\n    options: NormalizedFullOptions,\n    file?: string\n  ) {\n    const { trimOutputLeft, trimOutputRight, outputDelimiterLeft, outputDelimiterRight } = options\n    const value = input.slice(begin + outputDelimiterLeft.length, end - outputDelimiterRight.length)\n    super(TokenKind.Output, value, input, begin, end, trimOutputLeft, trimOutputRight, file)\n  }\n}\n","import { QuotedToken } from '../tokens/quoted-token'\nimport { PropertyAccessToken } from '../tokens/property-access-token'\nimport { NumberToken } from '../tokens/number-token'\nimport { assert } from '../util/assert'\nimport { literalValues } from '../util/literal'\nimport { LiteralToken } from '../tokens/literal-token'\nimport * as TypeGuards from '../util/type-guards'\nimport { Token } from '../tokens/token'\nimport { OperatorToken } from '../tokens/operator-token'\nimport { RangeToken } from '../tokens/range-token'\nimport { parseStringLiteral } from '../parser/parse-string-literal'\nimport { Context } from '../context/context'\nimport { range } from '../util/underscore'\nimport { Operators } from '../render/operator'\nimport { UndefinedVariableError } from '../util/error'\n\nexport class Expression {\n  private postfix: Token[]\n\n  public constructor (tokens: IterableIterator<Token>) {\n    this.postfix = [...toPostfix(tokens)]\n  }\n  public * evaluate (ctx: Context, lenient: boolean): any {\n    assert(ctx, () => 'unable to evaluate: context not defined')\n    const operands: any[] = []\n    for (const token of this.postfix) {\n      if (TypeGuards.isOperatorToken(token)) {\n        const r = yield operands.pop()\n        const l = yield operands.pop()\n        const result = evalOperatorToken(ctx.opts.operators, token, l, r, ctx)\n        operands.push(result)\n      } else {\n        operands.push(yield evalToken(token, ctx, lenient && this.postfix.length === 1))\n      }\n    }\n    return operands[0]\n  }\n}\n\nexport function evalToken (token: Token | undefined, ctx: Context, lenient = false): any {\n  if (TypeGuards.isPropertyAccessToken(token)) return evalPropertyAccessToken(token, ctx, lenient)\n  if (TypeGuards.isRangeToken(token)) return evalRangeToken(token, ctx)\n  if (TypeGuards.isLiteralToken(token)) return evalLiteralToken(token)\n  if (TypeGuards.isNumberToken(token)) return evalNumberToken(token)\n  if (TypeGuards.isWordToken(token)) return token.getText()\n  if (TypeGuards.isQuotedToken(token)) return evalQuotedToken(token)\n}\n\nfunction evalPropertyAccessToken (token: PropertyAccessToken, ctx: Context, lenient: boolean) {\n  const variable = token.getVariableAsText()\n  const props: string[] = token.props.map(prop => evalToken(prop, ctx, false))\n  try {\n    return ctx.get([variable, ...props])\n  } catch (e) {\n    if (lenient && e.name === 'InternalUndefinedVariableError') return null\n    throw (new UndefinedVariableError(e, token))\n  }\n}\n\nfunction evalNumberToken (token: NumberToken) {\n  const str = token.whole.content + '.' + (token.decimal ? token.decimal.content : '')\n  return Number(str)\n}\n\nexport function evalQuotedToken (token: QuotedToken) {\n  return parseStringLiteral(token.getText())\n}\n\nfunction evalOperatorToken (operators: Operators, token: OperatorToken, lhs: any, rhs: any, ctx: Context) {\n  const impl = operators[token.operator]\n  return impl(lhs, rhs, ctx)\n}\n\nfunction evalLiteralToken (token: LiteralToken) {\n  return literalValues[token.literal]\n}\n\nfunction evalRangeToken (token: RangeToken, ctx: Context) {\n  const low: number = evalToken(token.lhs, ctx)\n  const high: number = evalToken(token.rhs, ctx)\n  return range(+low, +high + 1)\n}\n\nfunction * toPostfix (tokens: IterableIterator<Token>): IterableIterator<Token> {\n  const ops: OperatorToken[] = []\n  for (const token of tokens) {\n    if (TypeGuards.isOperatorToken(token)) {\n      while (ops.length && ops[ops.length - 1].getPrecedence() > token.getPrecedence()) {\n        yield ops.pop()!\n      }\n      ops.push(token)\n    } else yield token\n  }\n  while (ops.length) {\n    yield ops.pop()!\n  }\n}\n","import { whiteSpaceCtrl } from './whitespace-ctrl'\nimport { NumberToken } from '../tokens/number-token'\nimport { IdentifierToken } from '../tokens/identifier-token'\nimport { literalValues } from '../util/literal'\nimport { LiteralToken } from '../tokens/literal-token'\nimport { OperatorToken } from '../tokens/operator-token'\nimport { PropertyAccessToken } from '../tokens/property-access-token'\nimport { assert } from '../util/assert'\nimport { TopLevelToken } from '../tokens/toplevel-token'\nimport { FilterArg } from './filter-arg'\nimport { FilterToken } from '../tokens/filter-token'\nimport { HashToken } from '../tokens/hash-token'\nimport { QuotedToken } from '../tokens/quoted-token'\nimport { ellipsis } from '../util/underscore'\nimport { HTMLToken } from '../tokens/html-token'\nimport { TagToken } from '../tokens/tag-token'\nimport { Token } from '../tokens/token'\nimport { RangeToken } from '../tokens/range-token'\nimport { ValueToken } from '../tokens/value-token'\nimport { OutputToken } from '../tokens/output-token'\nimport { TokenizationError } from '../util/error'\nimport { NormalizedFullOptions, defaultOptions } from '../liquid-options'\nimport { TYPES, QUOTE, BLANK, IDENTIFIER } from '../util/character'\nimport { matchOperator } from './match-operator'\nimport { Trie } from '../util/operator-trie'\nimport { Expression } from '../render/expression'\n\nexport class Tokenizer {\n  p = 0\n  N: number\n  private rawBeginAt = -1\n\n  constructor (\n    private input: string,\n    private trie: Trie,\n    private file: string = ''\n  ) {\n    this.N = input.length\n  }\n\n  readExpression () {\n    return new Expression(this.readExpressionTokens())\n  }\n\n  * readExpressionTokens (): IterableIterator<Token> {\n    const operand = this.readValue()\n    if (!operand) return\n\n    yield operand\n\n    while (this.p < this.N) {\n      const operator = this.readOperator()\n      if (!operator) return\n\n      const operand = this.readValue()\n      if (!operand) return\n\n      yield operator\n      yield operand\n    }\n  }\n  readOperator (): OperatorToken | undefined {\n    this.skipBlank()\n    const end = matchOperator(this.input, this.p, this.trie, this.p + 8)\n    if (end === -1) return\n    return new OperatorToken(this.input, this.p, (this.p = end), this.file)\n  }\n  readFilters (): FilterToken[] {\n    const filters = []\n    while (true) {\n      const filter = this.readFilter()\n      if (!filter) return filters\n      filters.push(filter)\n    }\n  }\n  readFilter (): FilterToken | null {\n    this.skipBlank()\n    if (this.end()) return null\n    assert(this.peek() === '|', () => `unexpected token at ${this.snapshot()}`)\n    this.p++\n    const begin = this.p\n    const name = this.readIdentifier()\n    if (!name.size()) return null\n    const args = []\n    this.skipBlank()\n    if (this.peek() === ':') {\n      do {\n        ++this.p\n        const arg = this.readFilterArg()\n        arg && args.push(arg)\n        while (this.p < this.N && this.peek() !== ',' && this.peek() !== '|') ++this.p\n      } while (this.peek() === ',')\n    }\n    return new FilterToken(name.getText(), args, this.input, begin, this.p, this.file)\n  }\n\n  readFilterArg (): FilterArg | undefined {\n    const key = this.readValue()\n    if (!key) return\n    this.skipBlank()\n    if (this.peek() !== ':') return key\n    ++this.p\n    const value = this.readValue()\n    return [key.getText(), value]\n  }\n\n  readTopLevelTokens (options: NormalizedFullOptions = defaultOptions): TopLevelToken[] {\n    const tokens: TopLevelToken[] = []\n    while (this.p < this.N) {\n      const token = this.readTopLevelToken(options)\n      tokens.push(token)\n    }\n    whiteSpaceCtrl(tokens, options)\n    return tokens\n  }\n\n  readTopLevelToken (options: NormalizedFullOptions): TopLevelToken {\n    const { tagDelimiterLeft, outputDelimiterLeft } = options\n    if (this.rawBeginAt > -1) return this.readEndrawOrRawContent(options)\n    if (this.match(tagDelimiterLeft)) return this.readTagToken(options)\n    if (this.match(outputDelimiterLeft)) return this.readOutputToken(options)\n    return this.readHTMLToken(options)\n  }\n\n  readHTMLToken (options: NormalizedFullOptions): HTMLToken {\n    const begin = this.p\n    while (this.p < this.N) {\n      const { tagDelimiterLeft, outputDelimiterLeft } = options\n      if (this.match(tagDelimiterLeft)) break\n      if (this.match(outputDelimiterLeft)) break\n      ++this.p\n    }\n    return new HTMLToken(this.input, begin, this.p, this.file)\n  }\n\n  readTagToken (options: NormalizedFullOptions = defaultOptions): TagToken {\n    const { file, input } = this\n    const begin = this.p\n    if (this.readToDelimiter(options.tagDelimiterRight) === -1) {\n      throw this.mkError(`tag ${this.snapshot(begin)} not closed`, begin)\n    }\n    const token = new TagToken(input, begin, this.p, options, file)\n    if (token.name === 'raw') this.rawBeginAt = begin\n    return token\n  }\n\n  readToDelimiter (delimiter: string) {\n    while (this.p < this.N) {\n      if ((this.peekType() & QUOTE)) {\n        this.readQuoted()\n        continue\n      }\n      ++this.p\n      if (this.rmatch(delimiter)) return this.p\n    }\n    return -1\n  }\n\n  readOutputToken (options: NormalizedFullOptions = defaultOptions): OutputToken {\n    const { file, input } = this\n    const { outputDelimiterRight } = options\n    const begin = this.p\n    if (this.readToDelimiter(outputDelimiterRight) === -1) {\n      throw this.mkError(`output ${this.snapshot(begin)} not closed`, begin)\n    }\n    return new OutputToken(input, begin, this.p, options, file)\n  }\n\n  readEndrawOrRawContent (options: NormalizedFullOptions): HTMLToken | TagToken {\n    const { tagDelimiterLeft, tagDelimiterRight } = options\n    const begin = this.p\n    let leftPos = this.readTo(tagDelimiterLeft) - tagDelimiterLeft.length\n    while (this.p < this.N) {\n      if (this.readIdentifier().getText() !== 'endraw') {\n        leftPos = this.readTo(tagDelimiterLeft) - tagDelimiterLeft.length\n        continue\n      }\n      while (this.p <= this.N) {\n        if (this.rmatch(tagDelimiterRight)) {\n          const end = this.p\n          if (begin === leftPos) {\n            this.rawBeginAt = -1\n            return new TagToken(this.input, begin, end, options, this.file)\n          } else {\n            this.p = leftPos\n            return new HTMLToken(this.input, begin, leftPos, this.file)\n          }\n        }\n        if (this.rmatch(tagDelimiterLeft)) break\n        this.p++\n      }\n    }\n    throw this.mkError(`raw ${this.snapshot(this.rawBeginAt)} not closed`, begin)\n  }\n\n  mkError (msg: string, begin: number) {\n    return new TokenizationError(msg, new IdentifierToken(this.input, begin, this.N, this.file))\n  }\n\n  snapshot (begin: number = this.p) {\n    return JSON.stringify(ellipsis(this.input.slice(begin), 16))\n  }\n\n  /**\n   * @deprecated\n   */\n  readWord () {\n    console.warn('Tokenizer#readWord() will be removed, use #readIdentifier instead')\n    return this.readIdentifier()\n  }\n\n  readIdentifier (): IdentifierToken {\n    this.skipBlank()\n    const begin = this.p\n    while (this.peekType() & IDENTIFIER) ++this.p\n    return new IdentifierToken(this.input, begin, this.p, this.file)\n  }\n\n  readHashes () {\n    const hashes = []\n    while (true) {\n      const hash = this.readHash()\n      if (!hash) return hashes\n      hashes.push(hash)\n    }\n  }\n\n  readHash (): HashToken | undefined {\n    this.skipBlank()\n    if (this.peek() === ',') ++this.p\n    const begin = this.p\n    const name = this.readIdentifier()\n    if (!name.size()) return\n    let value\n\n    this.skipBlank()\n    if (this.peek() === ':') {\n      ++this.p\n      value = this.readValue()\n    }\n    return new HashToken(this.input, begin, this.p, name, value, this.file)\n  }\n\n  remaining () {\n    return this.input.slice(this.p)\n  }\n\n  advance (i = 1) {\n    this.p += i\n  }\n\n  end () {\n    return this.p >= this.N\n  }\n\n  readTo (end: string): number {\n    while (this.p < this.N) {\n      ++this.p\n      if (this.rmatch(end)) return this.p\n    }\n    return -1\n  }\n\n  readValue (): ValueToken | undefined {\n    const value = this.readQuoted() || this.readRange()\n    if (value) return value\n\n    if (this.peek() === '[') {\n      this.p++\n      const prop = this.readQuoted()\n      if (!prop) return\n      if (this.peek() !== ']') return\n      this.p++\n      return new PropertyAccessToken(prop, [], this.p)\n    }\n\n    const variable = this.readIdentifier()\n    if (!variable.size()) return\n\n    let isNumber = variable.isNumber(true)\n    const props: (QuotedToken | IdentifierToken)[] = []\n    while (true) {\n      if (this.peek() === '[') {\n        isNumber = false\n        this.p++\n        const prop = this.readValue() || new IdentifierToken(this.input, this.p, this.p, this.file)\n        this.readTo(']')\n        props.push(prop)\n      } else if (this.peek() === '.' && this.peek(1) !== '.') { // skip range syntax\n        this.p++\n        const prop = this.readIdentifier()\n        if (!prop.size()) break\n        if (!prop.isNumber()) isNumber = false\n        props.push(prop)\n      } else break\n    }\n    if (!props.length && literalValues.hasOwnProperty(variable.content)) {\n      return new LiteralToken(this.input, variable.begin, variable.end, this.file)\n    }\n    if (isNumber) return new NumberToken(variable, props[0] as IdentifierToken)\n    return new PropertyAccessToken(variable, props, this.p)\n  }\n\n  readRange (): RangeToken | undefined {\n    this.skipBlank()\n    const begin = this.p\n    if (this.peek() !== '(') return\n    ++this.p\n    const lhs = this.readValueOrThrow()\n    this.p += 2\n    const rhs = this.readValueOrThrow()\n    ++this.p\n    return new RangeToken(this.input, begin, this.p, lhs, rhs, this.file)\n  }\n\n  readValueOrThrow (): ValueToken {\n    const value = this.readValue()\n    assert(value, () => `unexpected token ${this.snapshot()}, value expected`)\n    return value!\n  }\n\n  readQuoted (): QuotedToken | undefined {\n    this.skipBlank()\n    const begin = this.p\n    if (!(this.peekType() & QUOTE)) return\n    ++this.p\n    let escaped = false\n    while (this.p < this.N) {\n      ++this.p\n      if (this.input[this.p - 1] === this.input[begin] && !escaped) break\n      if (escaped) escaped = false\n      else if (this.input[this.p - 1] === '\\\\') escaped = true\n    }\n    return new QuotedToken(this.input, begin, this.p, this.file)\n  }\n\n  readFileName (): IdentifierToken {\n    const begin = this.p\n    while (!(this.peekType() & BLANK) && this.peek() !== ',' && this.p < this.N) this.p++\n    return new IdentifierToken(this.input, begin, this.p, this.file)\n  }\n\n  match (word: string) {\n    for (let i = 0; i < word.length; i++) {\n      if (word[i] !== this.input[this.p + i]) return false\n    }\n    return true\n  }\n\n  rmatch (pattern: string) {\n    for (let i = 0; i < pattern.length; i++) {\n      if (pattern[pattern.length - 1 - i] !== this.input[this.p - 1 - i]) return false\n    }\n    return true\n  }\n\n  peekType (n = 0) {\n    return TYPES[this.input.charCodeAt(this.p + n)]\n  }\n\n  peek (n = 0) {\n    return this.input[this.p + n]\n  }\n\n  skipBlank () {\n    while (this.peekType() & BLANK) ++this.p\n  }\n}\n","import { IDENTIFIER, TYPES } from '../util/character'\nimport { Trie } from '../util/operator-trie'\n\nexport function matchOperator (str: string, begin: number, trie: Trie, end = str.length) {\n  let node = trie\n  let i = begin\n  let info\n  while (node[str[i]] && i < end) {\n    node = node[str[i++]]\n    if (node['end']) info = node\n  }\n  if (!info) return -1\n  if (info['needBoundary'] && (TYPES[str.charCodeAt(i)] & IDENTIFIER)) return -1\n  return i\n}\n","import { stringify, toValue } from '../util/underscore'\n\nexport class Emitter {\n  public html: any = '';\n  public break = false;\n  public continue = false;\n  private keepOutputType? = false;\n\n  constructor (keepOutputType: boolean|undefined) {\n    this.keepOutputType = keepOutputType\n  }\n\n  public write (html: any) {\n    if (this.keepOutputType === true) {\n      html = toValue(html)\n    } else {\n      html = stringify(toValue(html))\n    }\n    // This will only preserve the type if the value is isolated.\n    // I.E:\n    // {{ my-port }} -> 42\n    // {{ my-host }}:{{ my-port }} -> 'host:42'\n    if (this.keepOutputType === true && typeof html !== 'string' && this.html === '') {\n      this.html = html\n    } else {\n      this.html = stringify(this.html) + stringify(html)\n    }\n  }\n}\n","import { RenderError } from '../util/error'\nimport { Context } from '../context/context'\nimport { Template } from '../template/template'\nimport { Emitter } from './emitter'\n\nexport class Render {\n  public * renderTemplates (templates: Template[], ctx: Context, emitter?: Emitter): IterableIterator<any> {\n    if (!emitter) {\n      emitter = new Emitter(ctx.opts.keepOutputType)\n    }\n    for (const tpl of templates) {\n      try {\n        const html = yield tpl.render(ctx, emitter)\n        html && emitter.write(html)\n        if (emitter.break || emitter.continue) break\n      } catch (e) {\n        const err = RenderError.is(e) ? e : new RenderError(e, tpl)\n        throw err\n      }\n    }\n    return emitter.html\n  }\n}\n","import { Token } from '../tokens/token'\nimport { Template } from '../template/template'\nimport { isTagToken } from '../util/type-guards'\nimport { TopLevelToken } from '../tokens/toplevel-token'\n\ntype ParseToken<T extends Token> = ((token: T, remainTokens: T[]) => Template)\n\nexport class ParseStream<T extends Token = TopLevelToken> {\n  private tokens: T[]\n  private handlers: {[key: string]: (arg: any) => void} = {}\n  private stopRequested = false\n  private parseToken: ParseToken<T>\n\n  public constructor (tokens: T[], parseToken: ParseToken<T>) {\n    this.tokens = tokens\n    this.parseToken = parseToken\n  }\n  public on<T2 extends Template | T | undefined> (name: string, cb: (arg: T2) => void): ParseStream<T> {\n    this.handlers[name] = cb\n    return this\n  }\n  private trigger <T extends Token | Template> (event: string, arg?: T) {\n    const h = this.handlers[event]\n    return h ? (h(arg), true) : false\n  }\n  public start () {\n    this.trigger('start')\n    let token: T | undefined\n    while (!this.stopRequested && (token = this.tokens.shift())) {\n      if (this.trigger('token', token)) continue\n      if (isTagToken(token) && this.trigger(`tag:${token.name}`, token)) {\n        continue\n      }\n      const template = this.parseToken(token, this.tokens)\n      this.trigger('template', template)\n    }\n    if (!this.stopRequested) this.trigger('end')\n    return this\n  }\n  public stop () {\n    this.stopRequested = true\n    return this\n  }\n}\n","export abstract class TemplateImpl<T> {\n  public token: T;\n  public constructor (token: T) {\n    this.token = token\n  }\n}\n","import { evalToken } from '../../render/expression'\nimport { Context } from '../../context/context'\nimport { Tokenizer } from '../../parser/tokenizer'\n\n/**\n * Key-Value Pairs Representing Tag Arguments\n * Example:\n *    For the markup `, foo:'bar', coo:2 reversed %}`,\n *    hash['foo'] === 'bar'\n *    hash['coo'] === 2\n *    hash['reversed'] === undefined\n */\nexport class Hash {\n  hash: { [key: string]: any } = {}\n  constructor (markup: string) {\n    const tokenizer = new Tokenizer(markup, {})\n    for (const hash of tokenizer.readHashes()) {\n      this.hash[hash.name.content] = hash.value\n    }\n  }\n  * render (ctx: Context) {\n    const hash = {}\n    for (const key of Object.keys(this.hash)) {\n      hash[key] = yield evalToken(this.hash[key], ctx)\n    }\n    return hash\n  }\n}\n","import { evalToken } from '../../render/expression'\nimport { Context } from '../../context/context'\nimport { identify } from '../../util/underscore'\nimport { FilterImplOptions } from './filter-impl-options'\nimport { FilterArg, isKeyValuePair } from '../../parser/filter-arg'\nimport { Liquid } from '../../liquid'\n\nexport class Filter {\n  public name: string\n  public args: FilterArg[]\n  private impl: FilterImplOptions\n  private liquid: Liquid\n\n  public constructor (name: string, impl: FilterImplOptions, args: FilterArg[], liquid: Liquid) {\n    this.name = name\n    this.impl = impl || identify\n    this.args = args\n    this.liquid = liquid\n  }\n  public render (value: any, context: Context) {\n    const argv: any[] = []\n    for (const arg of this.args as FilterArg[]) {\n      if (isKeyValuePair(arg)) argv.push([arg[0], evalToken(arg[1], context)])\n      else argv.push(evalToken(arg, context))\n    }\n    return this.impl.apply({ context, liquid: this.liquid }, [value, ...argv])\n  }\n}\n","import { isArray } from '../util/underscore'\nimport { ValueToken } from '../tokens/value-token'\n\ntype KeyValuePair = [string?, ValueToken?]\n\nexport type FilterArg = ValueToken | KeyValuePair\n\nexport function isKeyValuePair (arr: FilterArg): arr is KeyValuePair { // TODO check\n  return isArray(arr)\n}\n","import { Expression } from '../render/expression'\nimport { Tokenizer } from '../parser/tokenizer'\nimport { Filter } from './filter/filter'\nimport { Context } from '../context/context'\nimport { Liquid } from '../liquid'\n\nexport class Value {\n  public readonly filters: Filter[] = []\n  public readonly initial: Expression\n\n  /**\n   * @param str the value to be valuated, eg.: \"foobar\" | truncate: 3\n   */\n  public constructor (str: string, liquid: Liquid) {\n    const tokenizer = new Tokenizer(str, liquid.options.operatorsTrie)\n    this.initial = tokenizer.readExpression()\n    this.filters = tokenizer.readFilters().map(({ name, args }) => new Filter(name, liquid.filters.get(name), args, liquid))\n  }\n  public * value (ctx: Context, lenient: boolean) {\n    lenient = lenient || (ctx.opts.lenientIf && this.filters.length > 0 && this.filters[0].name === 'default')\n    let val = yield this.initial.evaluate(ctx, lenient)\n\n    for (const filter of this.filters) {\n      val = yield filter.render(val, ctx)\n    }\n    return val\n  }\n}\n","import { isFunction } from './underscore'\n\ntype resolver = (x?: any) => any\n\ninterface Thenable {\n  then (resolve: resolver, reject?: resolver): Thenable;\n  catch (reject: resolver): Thenable;\n}\n\nfunction createResolvedThenable (value: any): Thenable {\n  const ret = {\n    then: (resolve: resolver) => resolve(value),\n    catch: () => ret\n  }\n  return ret\n}\n\nfunction createRejectedThenable (err: Error): Thenable {\n  const ret = {\n    then: (resolve: resolver, reject?: resolver) => {\n      if (reject) return reject(err)\n      return ret\n    },\n    catch: (reject: resolver) => reject(err)\n  }\n  return ret\n}\n\nfunction isThenable (val: any): val is Thenable {\n  return val && isFunction(val.then)\n}\n\nfunction isAsyncIterator (val: any): val is IterableIterator<any> {\n  return val && isFunction(val.next) && isFunction(val.throw) && isFunction(val.return)\n}\n\n// convert an async iterator to a thenable (Promise compatible)\nexport function toThenable (val: IterableIterator<any> | Thenable | any): Thenable {\n  if (isThenable(val)) return val\n  if (isAsyncIterator(val)) return reduce()\n  return createResolvedThenable(val)\n\n  function reduce (prev?: any): Thenable {\n    let state\n    try {\n      state = (val as IterableIterator<any>).next(prev)\n    } catch (err) {\n      return createRejectedThenable(err)\n    }\n\n    if (state.done) return createResolvedThenable(state.value)\n    return toThenable(state.value!).then(reduce, err => {\n      let state\n      try {\n        state = (val as IterableIterator<any>).throw!(err)\n      } catch (e) {\n        return createRejectedThenable(e)\n      }\n      if (state.done) return createResolvedThenable(state.value)\n      return reduce(state.value)\n    })\n  }\n}\n\nexport function toPromise (val: IterableIterator<any> | Thenable | any): Promise<any> {\n  return Promise.resolve(toThenable(val))\n}\n\n// get the value of async iterator in synchronous manner\nexport function toValue (val: IterableIterator<any> | Thenable | any) {\n  let ret: any\n  toThenable(val)\n    .then((x: any) => {\n      ret = x\n      return createResolvedThenable(ret)\n    })\n    .catch((err: Error) => {\n      throw err\n    })\n  return ret\n}\n","import { isFunction } from '../../util/underscore'\nimport { Liquid } from '../../liquid'\nimport { TemplateImpl } from '../../template/template-impl'\nimport { Emitter, Hash, Context, TagToken, Template, TopLevelToken } from '../../types'\nimport { TagImpl } from './tag-impl'\n\nexport class Tag extends TemplateImpl<TagToken> implements Template {\n  public name: string\n  private impl: TagImpl\n\n  public constructor (token: TagToken, tokens: TopLevelToken[], liquid: Liquid) {\n    super(token)\n    this.name = token.name\n\n    const impl = liquid.tags.get(token.name)\n\n    this.impl = Object.create(impl)\n    this.impl.liquid = liquid\n    if (this.impl.parse) {\n      this.impl.parse(token, tokens)\n    }\n  }\n  public * render (ctx: Context, emitter: Emitter) {\n    const hash = yield new Hash(this.token.args).render(ctx)\n    const impl = this.impl\n    if (isFunction(impl.render)) return yield impl.render(ctx, emitter, hash)\n  }\n}\n","import { Value } from './value'\nimport { TemplateImpl } from '../template/template-impl'\nimport { Template } from '../template/template'\nimport { Context } from '../context/context'\nimport { Emitter } from '../render/emitter'\nimport { OutputToken } from '../tokens/output-token'\nimport { Liquid } from '../liquid'\n\nexport class Output extends TemplateImpl<OutputToken> implements Template {\n  private value: Value\n  public constructor (token: OutputToken, liquid: Liquid) {\n    super(token)\n    this.value = new Value(token.content, liquid)\n  }\n  public * render (ctx: Context, emitter: Emitter) {\n    const val = yield this.value.value(ctx, false)\n    emitter.write(val)\n  }\n}\n","import { TemplateImpl } from '../template/template-impl'\nimport { Template } from '../template/template'\nimport { HTMLToken } from '../tokens/html-token'\nimport { Context } from '../context/context'\nimport { Emitter } from '../render/emitter'\n\nexport class HTML extends TemplateImpl<HTMLToken> implements Template {\n  private str: string\n  public constructor (token: HTMLToken) {\n    super(token)\n    this.str = token.getContent()\n  }\n  public * render (ctx: Context, emitter: Emitter): IterableIterator<void> {\n    emitter.write(this.str)\n  }\n}\n","import { ParseError } from '../util/error'\nimport { Liquid } from '../liquid'\nimport { ParseStream } from './parse-stream'\nimport { isTagToken, isOutputToken } from '../util/type-guards'\nimport { OutputToken } from '../tokens/output-token'\nimport { Tag } from '../template/tag/tag'\nimport { Output } from '../template/output'\nimport { HTML } from '../template/html'\nimport { Template } from '../template/template'\nimport { TopLevelToken } from '../tokens/toplevel-token'\n\nexport default class Parser {\n  private liquid: Liquid\n\n  public constructor (liquid: Liquid) {\n    this.liquid = liquid\n  }\n  public parse (tokens: TopLevelToken[]) {\n    let token\n    const templates: Template[] = []\n    while ((token = tokens.shift())) {\n      templates.push(this.parseToken(token, tokens))\n    }\n    return templates\n  }\n  public parseToken (token: TopLevelToken, remainTokens: TopLevelToken[]) {\n    try {\n      if (isTagToken(token)) {\n        return new Tag(token, remainTokens, this.liquid)\n      }\n      if (isOutputToken(token)) {\n        return new Output(token as OutputToken, this.liquid)\n      }\n      return new HTML(token)\n    } catch (e) {\n      throw new ParseError(e, token)\n    }\n  }\n  public parseStream (tokens: TopLevelToken[]) {\n    return new ParseStream(tokens, (token, tokens) => this.parseToken(token, tokens))\n  }\n}\n","import { Tokenizer, assert, TagImplOptions, TagToken, Context } from '../../types'\n\nexport default {\n  parse: function (token: TagToken) {\n    const tokenizer = new Tokenizer(token.args, this.liquid.options.operatorsTrie)\n    this.key = tokenizer.readIdentifier().content\n    tokenizer.skipBlank()\n    assert(tokenizer.peek() === '=', () => `illegal token ${token.getText()}`)\n    tokenizer.advance()\n    this.value = tokenizer.remaining()\n  },\n  render: function * (ctx: Context) {\n    ctx.bottom()[this.key] = yield this.liquid._evalValue(this.value, ctx)\n  }\n} as TagImplOptions\n","import { isString, isObject, isArray } from './underscore'\n\nexport function toEnumerable (val: any) {\n  if (isArray(val)) return val\n  if (isString(val) && val.length > 0) return [val]\n  if (isObject(val)) return Object.keys(val).map((key) => [key, val[key]])\n  return []\n}\n\nexport function toArray (val: any) {\n  if (isArray(val)) return val\n  return [ val ]\n}\n","import { Drop } from './drop'\n\nexport class ForloopDrop extends Drop {\n  protected i = 0\n  public length: number\n  public constructor (length: number) {\n    super()\n    this.length = length\n  }\n  public next () {\n    this.i++\n  }\n  public index0 () {\n    return this.i\n  }\n  public index () {\n    return this.i + 1\n  }\n  public first () {\n    return this.i === 0\n  }\n  public last () {\n    return this.i === this.length - 1\n  }\n  public rindex () {\n    return this.length - this.i\n  }\n  public rindex0 () {\n    return this.length - this.i - 1\n  }\n  public valueOf () {\n    return JSON.stringify(this)\n  }\n}\n","import { assert, Tokenizer, evalToken, Emitter, TagToken, TopLevelToken, Context, Template, TagImplOptions, ParseStream } from '../../types'\nimport { toEnumerable } from '../../util/collection'\nimport { ForloopDrop } from '../../drop/forloop-drop'\nimport { Hash } from '../../template/tag/hash'\n\nexport default {\n  type: 'block',\n  parse: function (token: TagToken, remainTokens: TopLevelToken[]) {\n    const toknenizer = new Tokenizer(token.args, this.liquid.options.operatorsTrie)\n\n    const variable = toknenizer.readIdentifier()\n    const inStr = toknenizer.readIdentifier()\n    const collection = toknenizer.readValue()\n    assert(\n      variable.size() && inStr.content === 'in' && collection,\n      () => `illegal tag: ${token.getText()}`\n    )\n\n    this.variable = variable.content\n    this.collection = collection\n    this.hash = new Hash(toknenizer.remaining())\n    this.templates = []\n    this.elseTemplates = []\n\n    let p\n    const stream: ParseStream = this.liquid.parser.parseStream(remainTokens)\n      .on('start', () => (p = this.templates))\n      .on('tag:else', () => (p = this.elseTemplates))\n      .on('tag:endfor', () => stream.stop())\n      .on('template', (tpl: Template) => p.push(tpl))\n      .on('end', () => {\n        throw new Error(`tag ${token.getText()} not closed`)\n      })\n\n    stream.start()\n  },\n  render: function * (ctx: Context, emitter: Emitter) {\n    const r = this.liquid.renderer\n    let collection = toEnumerable(yield evalToken(this.collection, ctx))\n\n    if (!collection.length) {\n      yield r.renderTemplates(this.elseTemplates, ctx, emitter)\n      return\n    }\n\n    const hash = yield this.hash.render(ctx)\n    const offset = hash.offset || 0\n    const limit = (hash.limit === undefined) ? collection.length : hash.limit\n\n    collection = collection.slice(offset, offset + limit)\n    if ('reversed' in hash) collection.reverse()\n\n    const scope = { forloop: new ForloopDrop(collection.length) }\n    ctx.push(scope)\n    for (const item of collection) {\n      scope[this.variable] = item\n      yield r.renderTemplates(this.templates, ctx, emitter)\n      if (emitter.break) {\n        emitter.break = false\n        break\n      }\n      emitter.continue = false\n      scope.forloop.next()\n    }\n    ctx.pop()\n  }\n} as TagImplOptions\n","import { Tokenizer, assert, Template, Context, TagImplOptions, TagToken, TopLevelToken } from '../../types'\nimport { evalQuotedToken } from '../../render/expression'\n\nexport default {\n  parse: function (tagToken: TagToken, remainTokens: TopLevelToken[]) {\n    const tokenizer = new Tokenizer(tagToken.args, this.liquid.options.operatorsTrie)\n    this.variable = readVariableName(tokenizer)\n    assert(this.variable, () => `${tagToken.args} not valid identifier`)\n\n    this.templates = []\n\n    const stream = this.liquid.parser.parseStream(remainTokens)\n    stream.on('tag:endcapture', () => stream.stop())\n      .on('template', (tpl: Template) => this.templates.push(tpl))\n      .on('end', () => {\n        throw new Error(`tag ${tagToken.getText()} not closed`)\n      })\n    stream.start()\n  },\n  render: function * (ctx: Context) {\n    const r = this.liquid.renderer\n    const html = yield r.renderTemplates(this.templates, ctx)\n    ctx.bottom()[this.variable] = html\n  }\n} as TagImplOptions\n\nfunction readVariableName (tokenizer: Tokenizer) {\n  const word = tokenizer.readIdentifier().content\n  if (word) return word\n  const quoted = tokenizer.readQuoted()\n  if (quoted) return evalQuotedToken(quoted)\n}\n","enum BlockMode {\n  /* store rendered html into blocks */\n  OUTPUT,\n  /* output rendered html directly */\n  STORE\n}\n\nexport default BlockMode\n","import { toValue, evalToken, Value, Emitter, TagToken, TopLevelToken, Context, Template, TagImplOptions, ParseStream } from '../../types'\nimport { Tokenizer } from '../../parser/tokenizer'\n\nexport default {\n  parse: function (tagToken: TagToken, remainTokens: TopLevelToken[]) {\n    this.cond = new Value(tagToken.args, this.liquid)\n    this.cases = []\n    this.elseTemplates = []\n\n    let p: Template[] = []\n    const stream: ParseStream = this.liquid.parser.parseStream(remainTokens)\n      .on('tag:when', (token: TagToken) => {\n        p = []\n\n        const tokenizer = new Tokenizer(token.args, this.liquid.options.operatorsTrie)\n\n        while (!tokenizer.end()) {\n          const value = tokenizer.readValue()\n          if (value) {\n            this.cases.push({\n              val: value,\n              templates: p\n            })\n          }\n\n          tokenizer.readTo(',')\n        }\n      })\n      .on('tag:else', () => (p = this.elseTemplates))\n      .on('tag:endcase', () => stream.stop())\n      .on('template', (tpl: Template) => p.push(tpl))\n      .on('end', () => {\n        throw new Error(`tag ${tagToken.getText()} not closed`)\n      })\n\n    stream.start()\n  },\n\n  render: function * (ctx: Context, emitter: Emitter) {\n    const r = this.liquid.renderer\n    const cond = toValue(yield this.cond.value(ctx, ctx.opts.lenientIf))\n    for (const branch of this.cases) {\n      const val = evalToken(branch.val, ctx, ctx.opts.lenientIf)\n      if (val === cond) {\n        yield r.renderTemplates(branch.templates, ctx, emitter)\n        return\n      }\n    }\n    yield r.renderTemplates(this.elseTemplates, ctx, emitter)\n  }\n} as TagImplOptions\n","import { TagToken } from '../../tokens/tag-token'\nimport { TopLevelToken } from '../../tokens/toplevel-token'\nimport { TagImplOptions } from '../../template/tag/tag-impl-options'\n\nexport default {\n  parse: function (tagToken: TagToken, remainTokens: TopLevelToken[]) {\n    const stream = this.liquid.parser.parseStream(remainTokens)\n    stream\n      .on('token', (token: TagToken) => {\n        if (token.name === 'endcomment') stream.stop()\n      })\n      .on('end', () => {\n        throw new Error(`tag ${tagToken.getText()} not closed`)\n      })\n    stream.start()\n  }\n} as TagImplOptions\n","import { assert, evalQuotedToken, TypeGuards, Tokenizer, evalToken, Hash, Emitter, TagToken, Context, TagImplOptions } from '../../types'\nimport BlockMode from '../../context/block-mode'\n\nexport default {\n  parse: function (token: TagToken) {\n    const args = token.args\n    const tokenizer = new Tokenizer(args, this.liquid.options.operatorsTrie)\n    this.file = this.liquid.options.dynamicPartials\n      ? tokenizer.readValue()\n      : tokenizer.readFileName()\n    assert(this.file, () => `illegal argument \"${token.args}\"`)\n\n    const begin = tokenizer.p\n    const withStr = tokenizer.readIdentifier()\n    if (withStr.content === 'with') {\n      tokenizer.skipBlank()\n      if (tokenizer.peek() !== ':') {\n        this.withVar = tokenizer.readValue()\n      } else tokenizer.p = begin\n    } else tokenizer.p = begin\n\n    this.hash = new Hash(tokenizer.remaining())\n  },\n  render: function * (ctx: Context, emitter: Emitter) {\n    const { liquid, hash, withVar, file } = this\n    const { renderer } = liquid\n    // TODO try move all liquid.parse calls into parse() section\n    const filepath = ctx.opts.dynamicPartials\n      ? (TypeGuards.isQuotedToken(file)\n        ? yield renderer.renderTemplates(liquid.parse(evalQuotedToken(file)), ctx)\n        : yield evalToken(file, ctx))\n      : file.getText()\n    assert(filepath, () => `illegal filename \"${file.getText()}\":\"${filepath}\"`)\n\n    const saved = ctx.saveRegister('blocks', 'blockMode')\n    ctx.setRegister('blocks', {})\n    ctx.setRegister('blockMode', BlockMode.OUTPUT)\n    const scope = yield hash.render(ctx)\n    if (withVar) scope[filepath] = evalToken(withVar, ctx)\n    const templates = yield liquid._parseFile(filepath, ctx.opts, ctx.sync)\n    ctx.push(scope)\n    yield renderer.renderTemplates(templates, ctx, emitter)\n    ctx.pop()\n    ctx.restoreRegister(saved)\n  }\n} as TagImplOptions\n","import { assert } from '../../util/assert'\nimport { ForloopDrop } from '../../drop/forloop-drop'\nimport { toEnumerable } from '../../util/collection'\nimport { evalQuotedToken, TypeGuards, Tokenizer, evalToken, Hash, Emitter, TagToken, Context, TagImplOptions } from '../../types'\n\nexport default {\n  parse: function (token: TagToken) {\n    const args = token.args\n    const tokenizer = new Tokenizer(args, this.liquid.options.operatorsTrie)\n    this.file = this.liquid.options.dynamicPartials\n      ? tokenizer.readValue()\n      : tokenizer.readFileName()\n    assert(this.file, () => `illegal argument \"${token.args}\"`)\n\n    while (!tokenizer.end()) {\n      tokenizer.skipBlank()\n      const begin = tokenizer.p\n      const keyword = tokenizer.readIdentifier()\n      if (keyword.content === 'with' || keyword.content === 'for') {\n        tokenizer.skipBlank()\n        if (tokenizer.peek() !== ':') {\n          const value = tokenizer.readValue()\n          if (value) {\n            const beforeAs = tokenizer.p\n            const asStr = tokenizer.readIdentifier()\n            let alias\n            if (asStr.content === 'as') alias = tokenizer.readIdentifier()\n            else tokenizer.p = beforeAs\n\n            this[keyword.content] = { value, alias: alias && alias.content }\n            tokenizer.skipBlank()\n            if (tokenizer.peek() === ',') tokenizer.advance()\n            continue\n          }\n        }\n      }\n      tokenizer.p = begin\n      break\n    }\n    this.hash = new Hash(tokenizer.remaining())\n  },\n  render: function * (ctx: Context, emitter: Emitter) {\n    const { liquid, file, hash } = this\n    const { renderer } = liquid\n    const filepath = ctx.opts.dynamicPartials\n      ? (TypeGuards.isQuotedToken(file)\n        ? yield renderer.renderTemplates(liquid.parse(evalQuotedToken(file)), ctx)\n        : evalToken(file, ctx))\n      : file.getText()\n    assert(filepath, () => `illegal filename \"${file.getText()}\":\"${filepath}\"`)\n\n    const childCtx = new Context({}, ctx.opts, ctx.sync)\n    const scope = yield hash.render(ctx)\n    if (this['with']) {\n      const { value, alias } = this['with']\n      scope[alias || filepath] = evalToken(value, ctx)\n    }\n    childCtx.push(scope)\n\n    if (this['for']) {\n      const { value, alias } = this['for']\n      let collection = evalToken(value, ctx)\n      collection = toEnumerable(collection)\n      scope['forloop'] = new ForloopDrop(collection.length)\n      for (const item of collection) {\n        scope[alias] = item\n        const templates = yield liquid._parseFile(filepath, childCtx.opts, childCtx.sync)\n        yield renderer.renderTemplates(templates, childCtx, emitter)\n        scope.forloop.next()\n      }\n    } else {\n      const templates = yield liquid._parseFile(filepath, childCtx.opts, childCtx.sync)\n      yield renderer.renderTemplates(templates, childCtx, emitter)\n    }\n  }\n} as TagImplOptions\n","import { Tokenizer, Emitter, TagToken, Context, TagImplOptions } from '../../types'\nimport { isNumber, stringify } from '../../util/underscore'\n\nexport default {\n  parse: function (token: TagToken) {\n    const tokenizer = new Tokenizer(token.args, this.liquid.options.operatorsTrie)\n    this.variable = tokenizer.readIdentifier().content\n  },\n  render: function (context: Context, emitter: Emitter) {\n    const scope = context.environments\n    if (!isNumber(scope[this.variable])) {\n      scope[this.variable] = 0\n    }\n    emitter.write(stringify(--scope[this.variable]))\n  }\n} as TagImplOptions\n","import { assert } from '../../util/assert'\nimport { evalToken, Emitter, TagToken, Context, TagImplOptions } from '../../types'\nimport { Tokenizer } from '../../parser/tokenizer'\n\nexport default {\n  parse: function (tagToken: TagToken) {\n    const tokenizer = new Tokenizer(tagToken.args, this.liquid.options.operatorsTrie)\n    const group = tokenizer.readValue()\n    tokenizer.skipBlank()\n\n    this.candidates = []\n\n    if (group) {\n      if (tokenizer.peek() === ':') {\n        this.group = group\n        tokenizer.advance()\n      } else this.candidates.push(group)\n    }\n\n    while (!tokenizer.end()) {\n      const value = tokenizer.readValue()\n      if (value) this.candidates.push(value)\n      tokenizer.readTo(',')\n    }\n    assert(this.candidates.length, () => `empty candidates: ${tagToken.getText()}`)\n  },\n\n  render: function (ctx: Context, emitter: Emitter) {\n    const group = evalToken(this.group, ctx)\n    const fingerprint = `cycle:${group}:` + this.candidates.join(',')\n    const groups = ctx.getRegister('cycle')\n    let idx = groups[fingerprint]\n\n    if (idx === undefined) {\n      idx = groups[fingerprint] = 0\n    }\n\n    const candidate = this.candidates[idx]\n    idx = (idx + 1) % this.candidates.length\n    groups[fingerprint] = idx\n    const html = evalToken(candidate, ctx)\n    emitter.write(html)\n  }\n} as TagImplOptions\n","import { Value, Emitter, isTruthy, TagToken, TopLevelToken, Context, Template, TagImplOptions, ParseStream } from '../../types'\n\nexport default {\n  parse: function (tagToken: TagToken, remainTokens: TopLevelToken[]) {\n    this.branches = []\n    this.elseTemplates = []\n\n    let p\n    const stream: ParseStream = this.liquid.parser.parseStream(remainTokens)\n      .on('start', () => this.branches.push({\n        cond: new Value(tagToken.args, this.liquid),\n        templates: (p = [])\n      }))\n      .on('tag:elsif', (token: TagToken) => {\n        this.branches.push({\n          cond: new Value(token.args, this.liquid),\n          templates: p = []\n        })\n      })\n      .on('tag:else', () => (p = this.elseTemplates))\n      .on('tag:else-', () => (p = this.elseTemplates))\n      .on('tag:endif', () => stream.stop())\n      .on('tag:endif-', () => stream.stop())\n      .on('template', (tpl: Template) => p.push(tpl))\n      .on('end', () => {\n        throw new Error(`tag ${tagToken.getText()} not closed`)\n      })\n\n    stream.start()\n  },\n\n  render: function * (ctx: Context, emitter: Emitter) {\n    const r = this.liquid.renderer\n\n    for (const branch of this.branches) {\n      const cond = yield branch.cond.value(ctx, ctx.opts.lenientIf)\n      if (isTruthy(cond, ctx)) {\n        yield r.renderTemplates(branch.templates, ctx, emitter)\n        return\n      }\n    }\n    yield r.renderTemplates(this.elseTemplates, ctx, emitter)\n  }\n} as TagImplOptions\n","import { isNumber, stringify } from '../../util/underscore'\nimport { Tokenizer, Emitter, TagToken, Context, TagImplOptions } from '../../types'\n\nexport default {\n  parse: function (token: TagToken) {\n    const tokenizer = new Tokenizer(token.args, this.liquid.options.operatorsTrie)\n    this.variable = tokenizer.readIdentifier().content\n  },\n  render: function (context: Context, emitter: Emitter) {\n    const scope = context.environments\n    if (!isNumber(scope[this.variable])) {\n      scope[this.variable] = 0\n    }\n    const val = scope[this.variable]\n    scope[this.variable]++\n    emitter.write(stringify(val))\n  }\n} as TagImplOptions\n","import { assert, evalQuotedToken, TypeGuards, evalToken, Tokenizer, Emitter, Hash, TagToken, TopLevelToken, Context, TagImplOptions } from '../../types'\nimport BlockMode from '../../context/block-mode'\n\nexport default {\n  parse: function (token: TagToken, remainTokens: TopLevelToken[]) {\n    const tokenizer = new Tokenizer(token.args, this.liquid.options.operatorsTrie)\n    const file = this.liquid.options.dynamicPartials ? tokenizer.readValue() : tokenizer.readFileName()\n    assert(file, () => `illegal argument \"${token.args}\"`)\n\n    this.file = file\n    this.hash = new Hash(tokenizer.remaining())\n    this.tpls = this.liquid.parser.parse(remainTokens)\n  },\n  render: function * (ctx: Context, emitter: Emitter) {\n    const { liquid, hash, file } = this\n    const { renderer } = liquid\n    if (file.getText() === 'none') {\n      ctx.setRegister('blockMode', BlockMode.OUTPUT)\n      const html = yield renderer.renderTemplates(this.tpls, ctx)\n      emitter.write(html)\n      return\n    }\n    const filepath = ctx.opts.dynamicPartials\n      ? (TypeGuards.isQuotedToken(file)\n        ? yield renderer.renderTemplates(liquid.parse(evalQuotedToken(file)), ctx)\n        : evalToken(this.file, ctx))\n      : file.getText()\n    assert(filepath, () => `file \"${file.getText()}\"(\"${filepath}\") not available`)\n    const templates = yield liquid._parseFile(filepath, ctx.opts, ctx.sync)\n\n    // render remaining contents and store rendered results\n    ctx.setRegister('blockMode', BlockMode.STORE)\n    const html = yield renderer.renderTemplates(this.tpls, ctx)\n    const blocks = ctx.getRegister('blocks')\n    if (blocks[''] === undefined) blocks[''] = () => html\n    ctx.setRegister('blockMode', BlockMode.OUTPUT)\n\n    // render the layout file use stored blocks\n    ctx.push(yield hash.render(ctx))\n    const partial = yield renderer.renderTemplates(templates, ctx)\n    ctx.pop()\n    emitter.write(partial)\n  }\n} as TagImplOptions\n","import { Drop } from './drop'\n\nexport class BlockDrop extends Drop {\n  constructor (\n    // the block render from layout template\n    private superBlockRender: () => Iterable<string> = () => ''\n  ) {\n    super()\n  }\n  public super () {\n    return this.superBlockRender()\n  }\n}\n","import BlockMode from '../../context/block-mode'\nimport { BlockDrop } from '../../drop/block-drop'\nimport { ParseStream, TagToken, TopLevelToken, Template, Context, TagImpl, Emitter } from '../../types'\n\nexport default {\n  parse (this: TagImpl, token: TagToken, remainTokens: TopLevelToken[]) {\n    const match = /\\w+/.exec(token.args)\n    this.block = match ? match[0] : ''\n    this.tpls = [] as Template[]\n    const stream: ParseStream = this.liquid.parser.parseStream(remainTokens)\n      .on('tag:endblock', () => stream.stop())\n      .on('template', (tpl: Template) => this.tpls.push(tpl))\n      .on('end', () => {\n        throw new Error(`tag ${token.getText()} not closed`)\n      })\n    stream.start()\n  },\n\n  * render (this: TagImpl, ctx: Context, emitter: Emitter) {\n    const blockRender = this.getBlockRender(ctx)\n    yield this.emitHTML(ctx, emitter, blockRender)\n  },\n\n  getBlockRender (this: TagImpl, ctx: Context) {\n    const { liquid, tpls } = this\n    const extendedBlockRender = ctx.getRegister('blocks')[this.block]\n    const defaultBlockRender = function * (superBlock: BlockDrop) {\n      ctx.push({ block: superBlock })\n      const result = yield liquid.renderer.renderTemplates(tpls, ctx)\n      ctx.pop()\n      return result\n    }\n    return extendedBlockRender\n      ? (superBlock: BlockDrop) => extendedBlockRender(new BlockDrop(() => defaultBlockRender(superBlock)))\n      : defaultBlockRender\n  },\n\n  * emitHTML (this: TagImpl, ctx: Context, emitter: Emitter, blockRender: (block: BlockDrop) => string) {\n    if (ctx.getRegister('blockMode', BlockMode.OUTPUT) === BlockMode.STORE) {\n      ctx.getRegister('blocks')[this.block] = blockRender\n    } else {\n      emitter.write(yield blockRender(new BlockDrop()))\n    }\n  }\n}\n","import { TagToken, TopLevelToken, TagImplOptions } from '../../types'\n\nexport default {\n  parse: function (tagToken: TagToken, remainTokens: TopLevelToken[]) {\n    this.tokens = []\n\n    const stream = this.liquid.parser.parseStream(remainTokens)\n    stream\n      .on('token', (token: TagToken) => {\n        if (token.name === 'endraw') stream.stop()\n        else this.tokens.push(token)\n      })\n      .on('end', () => {\n        throw new Error(`tag ${tagToken.getText()} not closed`)\n      })\n    stream.start()\n  },\n  render: function () {\n    return this.tokens.map((token: TopLevelToken) => token.getText()).join('')\n  }\n} as TagImplOptions\n","import { ForloopDrop } from './forloop-drop'\n\nexport class TablerowloopDrop extends ForloopDrop {\n  private cols: number\n  public constructor (length: number, cols: number) {\n    super(length)\n    this.length = length\n    this.cols = cols\n  }\n  public row () {\n    return Math.floor(this.i / this.cols) + 1\n  }\n  public col0 () {\n    return (this.i % this.cols)\n  }\n  public col () {\n    return this.col0() + 1\n  }\n  public col_first () {  // eslint-disable-line\n    return this.col0() === 0\n  }\n  public col_last () { // eslint-disable-line\n    return this.col() === this.cols\n  }\n}\n","import assign from './assign'\nimport For from './for'\nimport capture from './capture'\nimport Case from './case'\nimport comment from './comment'\nimport include from './include'\nimport render from './render'\nimport decrement from './decrement'\nimport cycle from './cycle'\nimport If from './if'\nimport increment from './increment'\nimport layout from './layout'\nimport block from './block'\nimport raw from './raw'\nimport tablerow from './tablerow'\nimport unless from './unless'\nimport Break from './break'\nimport Continue from './continue'\nimport { TagImplOptions } from '../../template/tag/tag-impl-options'\n\nconst tags: { [key: string]: TagImplOptions } = {\n  assign, 'for': For, capture, 'case': Case, comment, include, render, decrement, increment, cycle, 'if': If, layout, block, raw, tablerow, unless, 'break': Break, 'continue': Continue\n}\n\nexport default tags\n","import { toEnumerable } from '../../util/collection'\nimport { assert, evalToken, Emitter, Hash, TagToken, TopLevelToken, Context, Template, TagImplOptions, ParseStream } from '../../types'\nimport { TablerowloopDrop } from '../../drop/tablerowloop-drop'\nimport { Tokenizer } from '../../parser/tokenizer'\n\nexport default {\n  parse: function (tagToken: TagToken, remainTokens: TopLevelToken[]) {\n    const tokenizer = new Tokenizer(tagToken.args, this.liquid.options.operatorsTrie)\n\n    this.variable = tokenizer.readIdentifier()\n    tokenizer.skipBlank()\n\n    const tmp = tokenizer.readIdentifier()\n    assert(tmp && tmp.content === 'in', () => `illegal tag: ${tagToken.getText()}`)\n\n    this.collection = tokenizer.readValue()\n    this.hash = new Hash(tokenizer.remaining())\n    this.templates = []\n\n    let p\n    const stream: ParseStream = this.liquid.parser.parseStream(remainTokens)\n      .on('start', () => (p = this.templates))\n      .on('tag:endtablerow', () => stream.stop())\n      .on('template', (tpl: Template) => p.push(tpl))\n      .on('end', () => {\n        throw new Error(`tag ${tagToken.getText()} not closed`)\n      })\n\n    stream.start()\n  },\n\n  render: function * (ctx: Context, emitter: Emitter) {\n    let collection = toEnumerable(yield evalToken(this.collection, ctx))\n    const hash = yield this.hash.render(ctx)\n    const offset = hash.offset || 0\n    const limit = (hash.limit === undefined) ? collection.length : hash.limit\n\n    collection = collection.slice(offset, offset + limit)\n    const cols = hash.cols || collection.length\n\n    const r = this.liquid.renderer\n    const tablerowloop = new TablerowloopDrop(collection.length, cols)\n    const scope = { tablerowloop }\n    ctx.push(scope)\n\n    for (let idx = 0; idx < collection.length; idx++, tablerowloop.next()) {\n      scope[this.variable.content] = collection[idx]\n      if (tablerowloop.col0() === 0) {\n        if (tablerowloop.row() !== 1) emitter.write('</tr>')\n        emitter.write(`<tr class=\"row${tablerowloop.row()}\">`)\n      }\n      emitter.write(`<td class=\"col${tablerowloop.col()}\">`)\n      yield r.renderTemplates(this.templates, ctx, emitter)\n      emitter.write('</td>')\n    }\n    if (collection.length) emitter.write('</tr>')\n    ctx.pop()\n  }\n} as TagImplOptions\n","import { Value, TopLevelToken, Template, Emitter, isTruthy, isFalsy, ParseStream, Context, TagImplOptions, TagToken } from '../../types'\n\nexport default {\n  parse: function (tagToken: TagToken, remainTokens: TopLevelToken[]) {\n    this.templates = []\n    this.branches = []\n    this.elseTemplates = []\n    let p\n    const stream: ParseStream = this.liquid.parser.parseStream(remainTokens)\n      .on('start', () => {\n        p = this.templates\n        this.cond = new Value(tagToken.args, this.liquid)\n      })\n      .on('tag:elsif', (token: TagToken) => {\n        this.branches.push({\n          cond: new Value(token.args, this.liquid),\n          templates: p = []\n        })\n      })\n      .on('tag:else', () => (p = this.elseTemplates))\n      .on('tag:endunless', () => stream.stop())\n      .on('template', (tpl: Template) => p.push(tpl))\n      .on('end', () => {\n        throw new Error(`tag ${tagToken.getText()} not closed`)\n      })\n\n    stream.start()\n  },\n\n  render: function * (ctx: Context, emitter: Emitter) {\n    const r = this.liquid.renderer\n    const cond = yield this.cond.value(ctx, ctx.opts.lenientIf)\n\n    if (isFalsy(cond, ctx)) {\n      yield r.renderTemplates(this.templates, ctx, emitter)\n      return\n    }\n\n    for (const branch of this.branches) {\n      const cond = yield branch.cond.value(ctx, ctx.opts.lenientIf)\n      if (isTruthy(cond, ctx)) {\n        yield r.renderTemplates(branch.templates, ctx, emitter)\n        return\n      }\n    }\n\n    yield r.renderTemplates(this.elseTemplates, ctx, emitter)\n  }\n} as TagImplOptions\n","import { Emitter, Context } from '../../types'\n\nexport default {\n  render: function (ctx: Context, emitter: Emitter) {\n    emitter.break = true\n  }\n}\n","import { Emitter, Context } from '../../types'\n\nexport default {\n  render: function (ctx: Context, emitter: Emitter) {\n    emitter.continue = true\n  }\n}\n","import { stringify } from '../../util/underscore'\n\nconst escapeMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&#34;',\n  \"'\": '&#39;'\n}\nconst unescapeMap = {\n  '&amp;': '&',\n  '&lt;': '<',\n  '&gt;': '>',\n  '&#34;': '\"',\n  '&#39;': \"'\"\n}\n\nexport function escape (str: string) {\n  return stringify(str).replace(/&|<|>|\"|'/g, m => escapeMap[m])\n}\n\nfunction unescape (str: string) {\n  return String(str).replace(/&(amp|lt|gt|#34|#39);/g, m => unescapeMap[m])\n}\n\nexport function escapeOnce (str: string) {\n  return escape(unescape(str))\n}\n\nexport function newlineToBr (v: string) {\n  return v.replace(/\\n/g, '<br />\\n')\n}\n\nexport function stripHtml (v: string) {\n  return v.replace(/<script.*?<\\/script>|<!--.*?-->|<style.*?<\\/style>|<.*?>/g, '')\n}\n","import { caseInsensitiveCompare } from '../../util/underscore'\n\nexport const abs = Math.abs\nexport const atLeast = Math.max\nexport const atMost = Math.min\nexport const ceil = Math.ceil\nexport const dividedBy = (v: number, arg: number) => v / arg\nexport const floor = Math.floor\nexport const minus = (v: number, arg: number) => v - arg\nexport const modulo = (v: number, arg: number) => v % arg\nexport const times = (v: number, arg: number) => v * arg\n\nexport function round (v: number, arg = 0) {\n  const amp = Math.pow(10, arg)\n  return Math.round(v * amp) / amp\n}\n\nexport function plus (v: number, arg: number) {\n  return Number(v) + Number(arg)\n}\n\nexport function sortNatural (input: any[], property?: string) {\n  if (!input || !input.sort) return []\n  if (property !== undefined) {\n    return [...input].sort(\n      (lhs, rhs) => caseInsensitiveCompare(lhs[property], rhs[property])\n    )\n  }\n  return [...input].sort(caseInsensitiveCompare)\n}\n","import { changeCase, padStart, padEnd } from './underscore'\n\nconst rFormat = /%([-_0^#:]+)?(\\d+)?([EO])?(.)/\nconst monthNames = [\n  'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August',\n  'September', 'October', 'November', 'December'\n]\nconst dayNames = [\n  'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'\n]\nconst monthNamesShort = monthNames.map(abbr)\nconst dayNamesShort = dayNames.map(abbr)\nconst suffixes = {\n  1: 'st',\n  2: 'nd',\n  3: 'rd',\n  'default': 'th'\n}\ninterface FormatOptions {\n  flags: object;\n  width?: string;\n  modifier?: string;\n}\n\nfunction abbr (str: string) {\n  return str.slice(0, 3)\n}\n\n// prototype extensions\nfunction daysInMonth (d: Date) {\n  const feb = isLeapYear(d) ? 29 : 28\n  return [31, feb, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n}\nfunction getDayOfYear (d: Date) {\n  let num = 0\n  for (let i = 0; i < d.getMonth(); ++i) {\n    num += daysInMonth(d)[i]\n  }\n  return num + d.getDate()\n}\nfunction getWeekOfYear (d: Date, startDay: number) {\n  // Skip to startDay of this week\n  const now = getDayOfYear(d) + (startDay - d.getDay())\n  // Find the first startDay of the year\n  const jan1 = new Date(d.getFullYear(), 0, 1)\n  const then = (7 - jan1.getDay() + startDay)\n  return String(Math.floor((now - then) / 7) + 1)\n}\nfunction isLeapYear (d: Date) {\n  const year = d.getFullYear()\n  return !!((year & 3) === 0 && (year % 100 || (year % 400 === 0 && year)))\n}\nfunction getSuffix (d: Date) {\n  const str = d.getDate().toString()\n  const index = parseInt(str.slice(-1))\n  return suffixes[index] || suffixes['default']\n}\nfunction century (d: Date) {\n  return parseInt(d.getFullYear().toString().substring(0, 2), 10)\n}\n\n// default to 0\nconst padWidths = {\n  d: 2,\n  e: 2,\n  H: 2,\n  I: 2,\n  j: 3,\n  k: 2,\n  l: 2,\n  L: 3,\n  m: 2,\n  M: 2,\n  S: 2,\n  U: 2,\n  W: 2\n}\n\n// default to '0'\nconst padChars = {\n  a: ' ',\n  A: ' ',\n  b: ' ',\n  B: ' ',\n  c: ' ',\n  e: ' ',\n  k: ' ',\n  l: ' ',\n  p: ' ',\n  P: ' '\n}\nconst formatCodes = {\n  a: (d: Date) => dayNamesShort[d.getDay()],\n  A: (d: Date) => dayNames[d.getDay()],\n  b: (d: Date) => monthNamesShort[d.getMonth()],\n  B: (d: Date) => monthNames[d.getMonth()],\n  c: (d: Date) => d.toLocaleString(),\n  C: (d: Date) => century(d),\n  d: (d: Date) => d.getDate(),\n  e: (d: Date) => d.getDate(),\n  H: (d: Date) => d.getHours(),\n  I: (d: Date) => String(d.getHours() % 12 || 12),\n  j: (d: Date) => getDayOfYear(d),\n  k: (d: Date) => d.getHours(),\n  l: (d: Date) => String(d.getHours() % 12 || 12),\n  L: (d: Date) => d.getMilliseconds(),\n  m: (d: Date) => d.getMonth() + 1,\n  M: (d: Date) => d.getMinutes(),\n  N: (d: Date, opts: FormatOptions) => {\n    const width = Number(opts.width) || 9\n    const str = String(d.getMilliseconds()).substr(0, width)\n    return padEnd(str, width, '0')\n  },\n  p: (d: Date) => (d.getHours() < 12 ? 'AM' : 'PM'),\n  P: (d: Date) => (d.getHours() < 12 ? 'am' : 'pm'),\n  q: (d: Date) => getSuffix(d),\n  s: (d: Date) => Math.round(d.valueOf() / 1000),\n  S: (d: Date) => d.getSeconds(),\n  u: (d: Date) => d.getDay() || 7,\n  U: (d: Date) => getWeekOfYear(d, 0),\n  w: (d: Date) => d.getDay(),\n  W: (d: Date) => getWeekOfYear(d, 1),\n  x: (d: Date) => d.toLocaleDateString(),\n  X: (d: Date) => d.toLocaleTimeString(),\n  y: (d: Date) => d.getFullYear().toString().substring(2, 4),\n  Y: (d: Date) => d.getFullYear(),\n  z: (d: Date, opts: FormatOptions) => {\n    const offset = d.getTimezoneOffset()\n    const nOffset = Math.abs(offset)\n    const h = Math.floor(nOffset / 60)\n    const m = nOffset % 60\n    return (offset > 0 ? '-' : '+') +\n      padStart(h, 2, '0') +\n      (opts.flags[':'] ? ':' : '') +\n      padStart(m, 2, '0')\n  },\n  't': () => '\\t',\n  'n': () => '\\n',\n  '%': () => '%'\n};\n(formatCodes as any).h = formatCodes.b\n\nexport default function (inputDate: Date, formatStr: string) {\n  let d = inputDate\n  if (d instanceof TimezoneDate) {\n    d = d.getDisplayDate()\n  }\n\n  let output = ''\n  let remaining = formatStr\n  let match\n  while ((match = rFormat.exec(remaining))) {\n    output += remaining.slice(0, match.index)\n    remaining = remaining.slice(match.index + match[0].length)\n    output += format(d, match)\n  }\n  return output + remaining\n}\n\nfunction format (d: Date, match: RegExpExecArray) {\n  const [input, flagStr = '', width, modifier, conversion] = match\n  const convert = formatCodes[conversion]\n  if (!convert) return input\n  const flags = {}\n  for (const flag of flagStr) flags[flag] = true\n  let ret = String(convert(d, { flags, width, modifier }))\n  let padChar = padChars[conversion] || '0'\n  let padWidth = width || padWidths[conversion] || 0\n  if (flags['^']) ret = ret.toUpperCase()\n  else if (flags['#']) ret = changeCase(ret)\n  if (flags['_']) padChar = ' '\n  else if (flags['0']) padChar = '0'\n  if (flags['-']) padWidth = 0\n  return padStart(ret, padWidth, padChar)\n}\n\nexport class TimezoneDate extends Date {\n  ISO8601_TIMEZONE_PATTERN = /([zZ]|([+-])(\\d{2}):(\\d{2}))$/;\n\n  inputTimezoneOffset = 0;\n\n  constructor (public dateString: string) {\n    super(dateString)\n    const m = dateString.match(this.ISO8601_TIMEZONE_PATTERN)\n    if (m && m[1] === 'Z') {\n      this.inputTimezoneOffset = this.getTimezoneOffset()\n    } else if (m && m[2] && m[3] && m[4]) {\n      const [, , sign, hours, minutes] = m\n      const delta = (sign === '+' ? 1 : -1) * (parseInt(hours, 10) * 60 + parseInt(minutes, 10))\n      this.inputTimezoneOffset = this.getTimezoneOffset() + delta\n    }\n  }\n\n  getDisplayDate (): Date {\n    return new Date((+this) + this.inputTimezoneOffset * 60 * 1000)\n  }\n}\n","export const urlDecode = (x: string) => x.split('+').map(decodeURIComponent).join(' ')\nexport const urlEncode = (x: string) => x.split(' ').map(encodeURIComponent).join('+')\n","import { isArray, isNil, last as arrayLast } from '../../util/underscore'\nimport { toArray } from '../../util/collection'\nimport { isTruthy } from '../../render/boolean'\nimport { FilterImpl } from '../../template/filter/filter-impl'\nimport { Scope } from '../../context/scope'\n\nexport const join = (v: any[], arg: string) => v.join(arg === undefined ? ' ' : arg)\nexport const last = (v: any) => isArray(v) ? arrayLast(v) : ''\nexport const first = (v: any) => isArray(v) ? v[0] : ''\nexport const reverse = (v: any[]) => [...v].reverse()\n\nexport function sort<T> (this: FilterImpl, arr: T[], property?: string) {\n  const getValue = (obj: Scope) => property ? this.context.getFromScope(obj, property.split('.')) : obj\n  return toArray(arr).sort((lhs, rhs) => {\n    lhs = getValue(lhs)\n    rhs = getValue(rhs)\n    return lhs < rhs ? -1 : (lhs > rhs ? 1 : 0)\n  })\n}\n\nexport const size = (v: string | any[]) => (v && v.length) || 0\n\nexport function map<T1, T2> (this: FilterImpl, arr: Scope[], property: string) {\n  return toArray(arr).map(obj => this.context.getFromScope(obj, property.split('.')))\n}\n\nexport function compact<T> (this: FilterImpl, arr: T[]) {\n  return toArray(arr).filter(x => !isNil(x))\n}\n\nexport function concat<T1, T2> (v: T1[], arg: T2[] | T2): (T1 | T2)[] {\n  return toArray(v).concat(arg)\n}\n\nexport function slice<T> (v: T[], begin: number, length = 1): T[] {\n  begin = begin < 0 ? v.length + begin : begin\n  return v.slice(begin, begin + length)\n}\n\nexport function where<T extends object> (this: FilterImpl, arr: T[], property: string, expected?: any): T[] {\n  return toArray(arr).filter(obj => {\n    const value = this.context.getFromScope(obj, String(property).split('.'))\n    return expected === undefined ? isTruthy(value, this.context) : value === expected\n  })\n}\n\nexport function uniq<T> (arr: T[]): T[] {\n  const u = {}\n  return (arr || []).filter(val => {\n    if (u.hasOwnProperty(String(val))) return false\n    u[String(val)] = true\n    return true\n  })\n}\n","import strftime, { TimezoneDate } from '../../util/strftime'\nimport { isString, isNumber } from '../../util/underscore'\nimport { FilterImpl } from '../../template/filter/filter-impl'\n\nexport function date (this: FilterImpl, v: string | Date, arg: string) {\n  let date = v\n  if (v === 'now' || v === 'today') {\n    date = new Date()\n  } else if (isNumber(v)) {\n    date = new Date(v * 1000)\n  } else if (isString(v)) {\n    if (/^\\d+$/.test(v)) {\n      date = new Date(+v * 1000)\n    } else if (this.context.opts.preserveTimezones) {\n      date = new TimezoneDate(v)\n    } else {\n      date = new Date(v)\n    }\n  }\n  return isValidDate(date) ? strftime(date, arg) : v\n}\n\nfunction isValidDate (date: any): date is Date {\n  return date instanceof Date && !isNaN(date.getTime())\n}\n","import { isFalsy } from '../../render/boolean'\nimport { isArray, isString, toValue } from '../../util/underscore'\nimport { FilterImpl } from '../../template/filter/filter-impl'\n\nexport function Default<T1, T2> (this: FilterImpl, v: string | T1, arg: T2): string | T1 | T2 {\n  if (isArray(v) || isString(v)) return v.length ? v : arg\n  return isFalsy(toValue(v), this.context) ? arg : v\n}\nexport function json (v: any) {\n  return JSON.stringify(v)\n}\n","/**\n * String related filters\n *\n * * prefer stringify() to String() since `undefined`, `null` should eval ''\n */\nimport { stringify } from '../../util/underscore'\nimport { assert } from '../../util/assert'\n\nexport function append (v: string, arg: string) {\n  assert(arguments.length === 2, () => 'append expect 2 arguments')\n  return stringify(v) + stringify(arg)\n}\n\nexport function prepend (v: string, arg: string) {\n  assert(arguments.length === 2, () => 'prepend expect 2 arguments')\n  return stringify(arg) + stringify(v)\n}\n\nexport function lstrip (v: string) {\n  return stringify(v).replace(/^\\s+/, '')\n}\n\nexport function downcase (v: string) {\n  return stringify(v).toLowerCase()\n}\n\nexport function upcase (str: string) {\n  return stringify(str).toUpperCase()\n}\n\nexport function remove (v: string, arg: string) {\n  return stringify(v).split(String(arg)).join('')\n}\n\nexport function removeFirst (v: string, l: string) {\n  return stringify(v).replace(String(l), '')\n}\n\nexport function rstrip (str: string) {\n  return stringify(str).replace(/\\s+$/, '')\n}\n\nexport function split (v: string, arg: string) {\n  return stringify(v).split(String(arg))\n}\n\nexport function strip (v: string) {\n  return stringify(v).trim()\n}\n\nexport function stripNewlines (v: string) {\n  return stringify(v).replace(/\\n/g, '')\n}\n\nexport function capitalize (str: string) {\n  str = stringify(str)\n  return str.charAt(0).toUpperCase() + str.slice(1).toLowerCase()\n}\n\nexport function replace (v: string, pattern: string, replacement: string) {\n  return stringify(v).split(String(pattern)).join(replacement)\n}\n\nexport function replaceFirst (v: string, arg1: string, arg2: string) {\n  return stringify(v).replace(String(arg1), arg2)\n}\n\nexport function truncate (v: string, l = 50, o = '...') {\n  v = stringify(v)\n  if (v.length <= l) return v\n  return v.substr(0, l - o.length) + o\n}\n\nexport function truncatewords (v: string, l = 15, o = '...') {\n  const arr = v.split(/\\s+/)\n  let ret = arr.slice(0, l).join(' ')\n  if (arr.length >= l) ret += o\n  return ret\n}\n","import { TagImplOptions } from './tag-impl-options'\nimport { assert } from '../../util/assert'\n\nexport class TagMap {\n  private impls: {[key: string]: TagImplOptions} = {}\n\n  get (name: string) {\n    const impl = this.impls[name]\n    assert(impl, () => `tag \"${name}\" not found`)\n    return impl\n  }\n\n  set (name: string, impl: TagImplOptions) {\n    this.impls[name] = impl\n  }\n}\n","import { FilterImplOptions } from './filter-impl-options'\nimport { Filter } from './filter'\nimport { FilterArg } from '../../parser/filter-arg'\nimport { assert } from '../../util/assert'\nimport { Liquid } from '../../liquid'\n\nexport class FilterMap {\n  private impls: {[key: string]: FilterImplOptions} = {}\n\n  constructor (\n    private readonly strictFilters: boolean,\n    private readonly liquid: Liquid\n  ) {}\n\n  get (name: string) {\n    const impl = this.impls[name]\n    assert(impl || !this.strictFilters, () => `undefined filter: ${name}`)\n    return impl\n  }\n\n  set (name: string, impl: FilterImplOptions) {\n    this.impls[name] = impl\n  }\n\n  create (name: string, args: FilterArg[]) {\n    return new Filter(name, this.get(name), args, this.liquid)\n  }\n}\n","import { Context } from './context/context'\nimport { forOwn, snakeCase } from './util/underscore'\nimport { Template } from './template/template'\nimport { Tokenizer } from './parser/tokenizer'\nimport { Render } from './render/render'\nimport Parser from './parser/parser'\nimport { TagImplOptions } from './template/tag/tag-impl-options'\nimport { Value } from './template/value'\nimport builtinTags from './builtin/tags'\nimport * as builtinFilters from './builtin/filters'\nimport { TagMap } from './template/tag/tag-map'\nimport { FilterMap } from './template/filter/filter-map'\nimport { LiquidOptions, normalizeStringArray, NormalizedFullOptions, applyDefault, normalize } from './liquid-options'\nimport { FilterImplOptions } from './template/filter/filter-impl-options'\nimport { toPromise, toValue } from './util/async'\nimport { Emitter } from './render/emitter'\n\nexport * from './util/error'\nexport * from './types'\n\nexport class Liquid {\n  public options: NormalizedFullOptions\n  public renderer: Render\n  public parser: Parser\n  public filters: FilterMap\n  public tags: TagMap\n\n  public constructor (opts: LiquidOptions = {}) {\n    this.options = applyDefault(normalize(opts))\n    this.parser = new Parser(this)\n    this.renderer = new Render()\n    this.filters = new FilterMap(this.options.strictFilters, this)\n    this.tags = new TagMap()\n\n    forOwn(builtinTags, (conf: TagImplOptions, name: string) => this.registerTag(snakeCase(name), conf))\n    forOwn(builtinFilters, (handler: FilterImplOptions, name: string) => this.registerFilter(snakeCase(name), handler))\n  }\n  public parse (html: string, filepath?: string): Template[] {\n    const tokenizer = new Tokenizer(html, this.options.operatorsTrie, filepath)\n    const tokens = tokenizer.readTopLevelTokens(this.options)\n    return this.parser.parse(tokens)\n  }\n\n  public _render (tpl: Template[], scope?: object, opts?: LiquidOptions, sync?: boolean): IterableIterator<any> {\n    const options = { ...this.options, ...normalize(opts) }\n    const ctx = new Context(scope, options, sync)\n    const emitter = new Emitter(options.keepOutputType)\n    return this.renderer.renderTemplates(tpl, ctx, emitter)\n  }\n  public async render (tpl: Template[], scope?: object, opts?: LiquidOptions): Promise<any> {\n    return toPromise(this._render(tpl, scope, opts, false))\n  }\n  public renderSync (tpl: Template[], scope?: object, opts?: LiquidOptions): any {\n    return toValue(this._render(tpl, scope, opts, true))\n  }\n\n  public _parseAndRender (html: string, scope?: object, opts?: LiquidOptions, sync?: boolean): IterableIterator<any> {\n    const tpl = this.parse(html)\n    return this._render(tpl, scope, opts, sync)\n  }\n  public async parseAndRender (html: string, scope?: object, opts?: LiquidOptions): Promise<any> {\n    return toPromise(this._parseAndRender(html, scope, opts, false))\n  }\n  public parseAndRenderSync (html: string, scope?: object, opts?: LiquidOptions): any {\n    return toValue(this._parseAndRender(html, scope, opts, true))\n  }\n\n  public * _parseFile (file: string, opts?: LiquidOptions, sync?: boolean) {\n    const options = { ...this.options, ...normalize(opts) }\n    const paths = options.root.map(root => options.fs.resolve(root, file, options.extname))\n    if (options.fs.fallback !== undefined) {\n      const filepath = options.fs.fallback(file)\n      if (filepath !== undefined) paths.push(filepath)\n    }\n\n    for (const filepath of paths) {\n      const { cache } = options\n      if (cache) {\n        const tpls = yield cache.read(filepath)\n        if (tpls) return tpls\n      }\n      if (!(sync ? options.fs.existsSync(filepath) : yield options.fs.exists(filepath))) continue\n      const tpl = this.parse(sync ? options.fs.readFileSync(filepath) : yield options.fs.readFile(filepath), filepath)\n      if (cache) cache.write(filepath, tpl)\n      return tpl\n    }\n    throw this.lookupError(file, options.root)\n  }\n  public async parseFile (file: string, opts?: LiquidOptions): Promise<Template[]> {\n    return toPromise(this._parseFile(file, opts, false))\n  }\n  public parseFileSync (file: string, opts?: LiquidOptions): Template[] {\n    return toValue(this._parseFile(file, opts, true))\n  }\n  public async renderFile (file: string, ctx?: object, opts?: LiquidOptions) {\n    const templates = await this.parseFile(file, opts)\n    return this.render(templates, ctx, opts)\n  }\n  public renderFileSync (file: string, ctx?: object, opts?: LiquidOptions) {\n    const templates = this.parseFileSync(file, opts)\n    return this.renderSync(templates, ctx, opts)\n  }\n\n  public _evalValue (str: string, ctx: Context): IterableIterator<any> {\n    const value = new Value(str, this)\n    return value.value(ctx, false)\n  }\n  public async evalValue (str: string, ctx: Context): Promise<any> {\n    return toPromise(this._evalValue(str, ctx))\n  }\n  public evalValueSync (str: string, ctx: Context): any {\n    return toValue(this._evalValue(str, ctx))\n  }\n\n  public registerFilter (name: string, filter: FilterImplOptions) {\n    this.filters.set(name, filter)\n  }\n  public registerTag (name: string, tag: TagImplOptions) {\n    this.tags.set(name, tag)\n  }\n  public plugin (plugin: (this: Liquid, L: typeof Liquid) => void) {\n    return plugin.call(this, Liquid)\n  }\n  public express () {\n    const self = this // eslint-disable-line\n    return function (this: any, filePath: string, ctx: object, callback: (err: Error | null, rendered: string) => void) {\n      const opts = { root: [...normalizeStringArray(this.root), ...self.options.root] }\n      self.renderFile(filePath, ctx, opts).then(html => callback(null, html) as any, callback as any)\n    }\n  }\n\n  private lookupError (file: string, roots: string[]) {\n    const err = new Error('ENOENT') as any\n    err.message = `ENOENT: Failed to lookup \"${file}\" in \"${roots}\"`\n    err.code = 'ENOENT'\n    return err\n  }\n\n  /**\n   * @deprecated use parseFile instead\n   */\n  public async getTemplate (file: string, opts?: LiquidOptions): Promise<Template[]> {\n    return this.parseFile(file, opts)\n  }\n  /**\n   * @deprecated use parseFileSync instead\n   */\n  public getTemplateSync (file: string, opts?: LiquidOptions): Template[] {\n    return this.parseFileSync(file, opts)\n  }\n}\n"],"names":["Drop","key","toStr","Object","prototype","toString","toLowerCase","String","isString","value","call","isFunction","stringify","isNil","toValue","valueOf","isNumber","isArray","forOwn","object","iteratee","k","hasOwnProperty","last","arr","length","isObject","type","range","start","stop","step","i","push","padStart","str","ch","pad","add","n","identify","val","snakeCase","replace","_","a","b","caseInsensitiveCompare","next","prev","this","LRU","cache","node","Node","head","size","ensureLimit","remove","write","tail","limit","root","filepath","ext","path","base","document","createElement","href","getElementsByTagName","insertBefore","firstChild","resolved","removeChild","domResolve","origin","split","pop","test","url","Promise","resolve","reject","xhr","XMLHttpRequest","onload","status","responseText","Error","statusText","onerror","open","send","isComparable","arg","equals","isTruthy","ctx","isFalsy","opts","jsTruthy","defaultOperators","==","l","r","!=",">","gt","lt","<",">=","geq","leq","<=","contains","indexOf","and","or","TYPES","IDENTIFIER","BLANK","INLINE_BLANK","createTrie","operators","trie","_b","tslib_1.__values","entries","_d","name_1","handler","c","charCodeAt","needBoundary","end","defaultOptions","undefined","extname","fs","dynamicPartials","trimTagRight","trimTagLeft","trimOutputRight","trimOutputLeft","greedy","tagDelimiterLeft","tagDelimiterRight","outputDelimiterLeft","outputDelimiterRight","preserveTimezones","strictFilters","strictVariables","lenientIf","globals","keepOutputType","operatorsTrie","normalize","options","normalizeStringArray","_.isArray","_.isString","tslib_1.__extends","LiquidError","err","originalError","context","token","line","lines","input","begin","Math","max","min","_\r\n        .range","map","lineNumber","_.padStart","join","mkContext","message","msg","file","_a","col","mkMessage","stack","_super","_this","name","update","RenderError","obj","tpl","variableName","TokenKind","Context","defaultValue","registers","_i","keys","getRegister","keyValues","forEach","setRegister","tslib_1.__spread","environments","scopes","reduce","__assign","paths","scope","findScope","getFromScope","preScope","readProperty","isHexColor","hexToRgba","InternalUndefinedVariableError","candidate","hexStr","rgba","red","green","blue","alpha","colorNew","slice","concat","colorChange","parseInt","env","sync","toLiquid","liquidMethodMissing","readSize","readFirst","readLast","isDelimitedToken","getKind","Delimited","isOperatorToken","Operator","isHTMLToken","HTML","isOutputToken","Output","isTagToken","Tag","isQuotedToken","Quoted","isLiteralToken","Literal","isNumberToken","Number","isPropertyAccessToken","PropertyAccess","isWordToken","Word","isRangeToken","Range","kind","trimLeft","mask","trimRight","charAt","Token","row","whole","decimal","IdentifierToken","allowSign","content","getText","NullDrop","EmptyDrop","BlankDrop","nil","literalValues","true","false","null","empty","blank","literal","precedence","OperatorToken","operator","rHex","rOct","escapeChar","f","t","v","hexVal","code","parseStringLiteral","ret","j","fromCharCode","PropertyAccessToken","variable","props","assert","predicate","AssertionError","args","Filter","Hash","HTMLToken","tl","tr","trim","DelimitedToken","tokenizer","Tokenizer","readIdentifier","TokenizationError","skipBlank","remaining","lhs","rhs","Expression","lenient","operands","postfix","TypeGuards.isOperatorToken","_f","result","impl","evalOperatorToken","_c","evalToken","tokens","ops","tokens_1","getPrecedence","toPostfix","TypeGuards.isPropertyAccessToken","getVariableAsText","prop","get","e","UndefinedVariableError","evalPropertyAccessToken","TypeGuards.isRangeToken","low","high","evalRangeToken","TypeGuards.isLiteralToken","evalLiteralToken","TypeGuards.isNumberToken","evalNumberToken","TypeGuards.isWordToken","TypeGuards.isQuotedToken","evalQuotedToken","readExpressionTokens","operand","readValue","p","N","readOperator","operand_1","info","matchOperator","filters","filter","readFilter","peek","snapshot","readFilterArg","FilterToken","readTopLevelToken","inRaw","whiteSpaceCtrl","rawBeginAt","readEndrawOrRawContent","match","readTagToken","readOutputToken","readHTMLToken","readToDelimiter","mkError","TagToken","delimiter","peekType","readQuoted","rmatch","OutputToken","leftPos","readTo","JSON","substr","ellipsis","console","warn","hashes","hash","readHash","HashToken","readRange","LiteralToken","NumberToken","readValueOrThrow","RangeToken","escaped","QuotedToken","word","pattern","Emitter","html","Render","templates","emitter","templates_1","render","break","continue","is","e_1","ParseStream","cb","handlers","event","h","trigger","stopRequested","shift","template","parseToken","markup","readHashes","argv","apply","liquid","Value","initial","evaluate","readExpression","readFilters","createResolvedThenable","then","catch","createRejectedThenable","toThenable","isThenable","throw","return","isAsyncIterator","state","done","toPromise","x","TemplateImpl","tags","create","parse","getContent","Parser","remainTokens","ParseError","advance","bottom","_evalValue","toEnumerable","toArray","ForloopDrop","toknenizer","inStr","collection","elseTemplates","stream","parser","parseStream","on","renderer","renderTemplates","offset","reverse","forloop","collection_1","item","tagToken","quoted","readVariableName","BlockMode","cond","cases","_e","branch","readFileName","withVar","saved","saveRegister","OUTPUT","_parseFile","restoreRegister","keyword","beforeAs","alias","_g","childCtx","group","candidates","fingerprint","groups","idx","branches","tpls","html_1","STORE","blocks","partial","BlockDrop","superBlockRender","exec","block","blockRender","getBlockRender","emitHTML","defaultBlockRender","superBlock","extendedBlockRender","TablerowloopDrop","floor","cols","col0","assign","for","For","capture","case","Case","comment","include","decrement","increment","cycle","if","If","layout","raw","tablerow","tmp","tablerowloop","unless","escapeMap","&","\"","'","unescapeMap","&amp;","&lt;","&gt;","&#34;","&#39;","escape","m","abs","atLeast","atMost","ceil","rFormat","monthNames","dayNames","monthNamesShort","abbr","dayNamesShort","suffixes","1","2","3","default","getDayOfYear","d","num","getMonth","year","getFullYear","isLeapYear","getDate","getWeekOfYear","startDay","now","getDay","Date","padWidths","H","I","L","M","S","U","W","padChars","A","B","P","formatCodes","toLocaleString","C","substring","century","getHours","getMilliseconds","getMinutes","width","padEnd","q","index","getSuffix","s","round","getSeconds","u","w","toLocaleDateString","X","toLocaleTimeString","y","Y","z","getTimezoneOffset","nOffset","flags","%","format","flagStr","modifier","conversion","convert","flagStr_1","padChar","padWidth","toUpperCase","some","changeCase","TimezoneDate","inputTimezoneOffset","dateString","ISO8601_TIMEZONE_PATTERN","sign","hours","minutes","delta","unescape","amp","pow","property","sort","decodeURIComponent","encodeURIComponent","arrayLast","getValue","expected","date","isNaN","getTime","isValidDate","inputDate","formatStr","getDisplayDate","output","strftime","arguments","replacement","arg1","arg2","o","TagMap","impls","FilterMap","Liquid","readTopLevelTokens","_render","_parseAndRender","fallback","paths_1","read","existsSync","exists","readFileSync","readFile","lookupError","parseFile","parseFileSync","renderSync","set","tag","plugin","self","filePath","callback","renderFile","roots","applyDefault","builtinTags","conf","registerTag","builtinFilters","registerFilter"],"mappings":"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"}